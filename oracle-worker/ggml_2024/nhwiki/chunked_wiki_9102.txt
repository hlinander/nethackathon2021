{{right-align|[ Charlotte's Web, by E.B. White ]}}
}}

==References==
<references />

{{disambig}}
{{nethack-343}}}
&&%s&& %s Infravisible {21351 2007-06-19T17:28:20Z {509 Lotte} Redirecting to [[Infravision]] #REDIRECT [[Infravision]]}
&&%s&& %s You hear the howling of the CwnAnnwn... {37761 2009-02-07T13:42:12Z {0 } Redirecting #REDIRECT [[Hit points#Messages]]}
&&%s&& %s Knock {61626 2010-12-18T12:37:22Z {635 PeterGFin} very short article entirely covered by the spellbook page #REDIRECT [[Spellbook of knock]]}
&&%s&& %s Lock {98845 2015-12-20T00:35:07Z {4000080 ChasonBot}  The following things have a lock:
* a lock on a [[door]]
* a lock on a [[large box]]
* a lock on a [[chest]]

These may lock it:
* [[skeleton key]], including the [[Master Key of Thievery]]
* [[lock pick]]
* spell of [[wizard lock]]
* [[wand of locking]]

These may unlock it:
* [[skeleton key]], including the [[Master Key of Thievery]]
* [[lock pick]]
* [[credit card]], including the [[Platinum Yendorian Express Card]]
* spell of [[knock]]
* [[wand of opening]]
* [[kick]] (a box or chest)
* #[[force]] (a box or chest)

{{disambig}}
{{nethack-343}}}
&&%s&& %s !oMD {21363 2007-06-20T03:43:40Z {0 } Redirecting to [[Potion of monster detection]] #REDIRECT [[Potion of monster detection]]}
&&%s&& %s Revgeno {21373 2007-06-21T02:36:12Z {0 } Redirecting to [[Genocide#Reverse genocide]] #REDIRECT [[Genocide#Reverse genocide]]}
&&%s&& %s Sacrificing {85591 2013-06-04T01:46:39Z {4000180 Bcode} redirect to [[Sacrifice]] instead #REDIRECT [[Sacrifice]]}
&&%s&& %s 2007 June nethack.alt.org tournament {85860 2013-06-12T18:27:12Z {4000180 Bcode} linkfix devnull The '''2007 June nethack.alt.org''' tournament occurred during June of 2007. The competition was open to any game played on [[nethack.alt.org]] that started and ended during the month. In total, 349 [[ascension]]s in 14,524 total games counted for the tournament.

See also [[Junethack]].

==Trophies==
Two individual trophies added this year were:
* Most [[Extinctionist]] Ascension
* Truest [[Pacifist]] Ascension
In addition, the three clan trophies added:
* Best in Show
* Most Ascensions
* Highest Ascension Ratio
Trophies removed:
* Highest-Scored Non-Ascension
* Lowest HP Ascension
* Lowest Average Dungeon Level
* Most Lifesaved Ascension
* Most Efficient Ascension
The unique trophies death should have been included, but was not.

==Notable==
Theta was the first to achieve a Full Monty in a [[:/dev/null/nethack tournament]] or the [[2006 nethack.alt.org tournament]]. 78291 ascended a staggering 42 games, while sustaining a ratio above 50%.

The monthly ascension number was shattered, with the 388 ascensions ending in June easily topping the previous high of 219. Daily ascensions was also beaten, twice. First time was on the first day with 19, with the final day's 22 ascensions surpassing that mark. Lastly, the number of games ended in a day was also topped, with the 701 occurring on the first bettering the former record of 582.

This was the first year the tournament supported clans.

==External links==
* [http://groups.google.com/group/rec.games.roguelike.nethack/msg/4769e702d1cc3bf7 Tournament postmortem]
[[Category:Tournaments]]}
&&%s&& %s Special spell {105382 2017-04-28T17:35:51Z {4000693 Phol ende wodan} Fix broken redirect #REDIRECT [[Spellcasting#Calculating spell success rate]]}
&&%s&& %s Emergency spell {140415 2021-05-28T23:33:07Z {4001279 Umbire the Phantom}  [[Healer]]s, [[Knight]]s, [[Monk]]s, [[Priest]]s and [[Valkyrie]]s have a special +2 success bonus (+3 for [[Healer]]s) for six '''"emergency" spells''':{{refsrc|src/spell.c|1679|version=NetHack 3.6.1|comment=List of emergency spells.}}

* {{Spell of|healing}}
* {{Spell of|cure blindness}}
* {{Spell of|cure sickness}}
* {{Spell of|extra healing}}
* {{Spell of|restore ability}}
* {{Spell of|remove curse}}

[[Ranger]]s have a special -2 failure '''penalty''', and [[Tourist]]s -1, when casting these spells.

For [[Archeologist]]s, [[Barbarian]]s, [[Caveman]]s, [[Rogue]]s, [[Samurai]]s and [[Wizard]]s, these spells have no "emergency" bonus or penalty to casting.

==See also==

* [[Spellcasting]]

==References==
<references/>

[[Category:Strategy]]
[[Category:Spellcasting]]
{{nethack-361}}}
&&%s&& %s If you can't breathe air, how can you drink liquid? {21595 2007-07-08T04:35:42Z {0 } Redirecting to [[Amulet of strangulation]] #REDIRECT [[Amulet of strangulation]]}
&&%s&& %s You pass out {21596 2007-07-08T04:40:24Z {0 } Redirecting to [[Potion of booze]] #REDIRECT [[Potion of booze]]}
&&%s&& %s You pass out. {21597 2007-07-08T04:41:18Z {0 } Redirecting to [[Potion of booze]] #REDIRECT [[Potion of booze]]}
&&%s&& %s You awake with a headache {21598 2007-07-08T04:47:36Z {0 } Redirecting to [[Potion of booze]] #REDIRECT [[Potion of booze]]}
&&%s&& %s You awake with a headache. {21599 2007-07-08T04:49:12Z {0 } Redirecting to [[Potion of booze]] #REDIRECT [[Potion of booze]]}
&&%s&& %s Mines {21676 2007-07-16T17:07:13Z {0 } #Redirect[[Gnomish Mines]] #Redirect[[Gnomish Mines]]}
&&%s&& %s Record {21677 2007-07-16T18:45:10Z {630 Paxed} redirect to [[Record file]] #REDIRECT [[Record file]]}
&&%s&& %s You feel an unexpected draft {40578 2009-06-20T02:41:07Z {102 Bitplane}  #redirect [[Door]]
[[Category:Messages]]}
&&%s&& %s Autopickup exception {137058 2021-01-13T22:20:17Z {4001476 Infinigon} move "things too good to miss" higher up in the page... so people don't miss it {{Tocright}}
'''AUTOPICKUP_EXCEPTION''' is a configuration option that allows you to define what items are automatically picked up, based on the name of the item. This gives more precision on top of [[pickup_types]]. You need to have [[autopickup]] on for autopickup exceptions to be active.

In NetHack 3.6 autopickup exceptions are [[Compile-time options#AUTOPICKUP_EXCEPTIONS|compiled in by default]]. The [[Nethack.alt.org#NetHack 3.4.3 NAO|NAO version of NetHack 3.4.3]] has them as well.

==Syntax==
An autopickup exception rule is expressed as either a <tt><</tt> or a <tt>></tt>, followed by a [[wikipedia:Regular expression|regular expression]]. The leading character determines whether items whose names match the regular expression are picked up: a <tt><</tt> rule flags the matched item for pickup, while a <tt>></tt> rule ignores the matched item.

The regular expression is matched against the singular form of the name of the item, plus any preceding article or number: "a gold piece" matches a single gold piece, "2 gold piece" matches a stack of 2 gold pieces, but "2 gold pieces" would match nothing.{{reffunc|objnam.c|makesingular}} Any "called ..." or "named ..." suffixes added with the [[Name|#name]] command ''are'' included, so take note of your own naming habits and write your autopickup exceptions accordingly.

As of version [[3.6.4]], autopickup exceptions override one another sequentially the same way [[menucolors]] and [[MSGTYPE]]s do, with rules specified later in the config file taking precedence over those specified earlier, and rules specified during play via the {{kbd|O}} command taking precedence over everything. Order is all that matters; neither <tt><</tt> nor <tt>></tt> takes precedence over the other. [[Pickup_types]] is consulted if and only if no matching rule is found. 

In the [[configuration file]], exceptions are specified by the string <tt>AUTOPICKUP_EXCEPTION=</tt> followed by the rule enclosed in double quotes. When adding an exception via the {{kbd|O}} command, you're just prompted for the rule without quotes.

==Strategy==
Autopickup exceptions can greatly simplify dungeon exploration. You can use them to keep dangerous items out of monsters' hands, to conveniently sort through large piles of loot, to automate things you might forget, to save a turn when fleeing or on [[speed run]]s, to remove good morphs from your [[polypiling]] line without paying attention, etc.

Some items, such as [[gold]], are useful only in the early game. You can add and remove rules in-game with the {{kbd|O}} command, though the settings will revert the next time you run the program. If your needs change much over the course of a long game, the easiest way to update the exceptions is to comment or uncomment the lines in your [[nethackrc]], [[save]] the game, and restore. You can also use [[pickup_types]] as an in-game switch to distinguish between early-game and late-game configurations by simply not mentioning items you want to default to [[pickup_types]].

===Suggested rules===
First, it's necessary to turn on autopickup, and set some pickup_types that will act as a catch-all assuming none of our autopickup exception rules match. Highly recommended — but not necessary — is adapting [[pickup_burden]].
 OPTIONS=autopickup
 OPTIONS=pickup_types:$?!/(
 OPTIONS=pickup_burden:unencumbered

Individually #[[name]] the real [[Amulet of Yendor]] right away and you'll never fall for a [[Cheap plastic imitation of the Amulet of Yendor|fake]]:
 AUTOPICKUP_EXCEPTION=">Amulet of Yendor"
 AUTOPICKUP_EXCEPTION="<Amulet of Yendor named"

Avoid turning your [[Scroll of scare monster|scrolls of scare monster]] to dust:
 AUTOPICKUP_EXCEPTION=">scroll .* scare monster"

Walk in peace over empty wands and [[wand of nothing|wands of nothing]]:
 AUTOPICKUP_EXCEPTION=">:0)"
 AUTOPICKUP_EXCEPTION="> named empty"
 AUTOPICKUP_EXCEPTION="> nothing"

Good [[monster starting inventory|items left after a fight]], but requires careful weight watching:
 # AUTOPICKUP_EXCEPTION="<potion .* healing"
 # AUTOPICKUP_EXCEPTION="<potion .* gain level"

Pick up formally [[identified]] artifacts. Don't blast yourself to death with a cross-aligned one — leave unidentified ones on the floor:
 AUTOPICKUP_EXCEPTION="<^the "

Some people also want known-blessed items, though this likely picks up too much:
 #  AUTOPICKUP_EXCEPTION="< blessed "

===Corpses===
The [[comestible]] item class includes [[food]], which you may well want to autopickup, but also [[corpses]], most of which are worthless, prohibitively heavy, and in the case of [[cockatrice]] and [[chickatrice]] corpses, extremely dangerous. If you want to pick up food, but not corpses, include <tt>%</tt> in your pickup_types and then add the following exception:
 AUTOPICKUP_EXCEPTION="> corpse"

Corpses you ''will'' want to pick up include [[lichen]] and [[lizard]]s, which do not decay and the latter of which is invaluable in [[stoning|certain emergencies]].  You may also want to grab [[newts]], [[floating eyes]], and [[wraiths]], which are lightweight and have beneficial effects when eaten. If you want to pick up these, add the following lines beneath the corpse rule:
 AUTOPICKUP_EXCEPTION="<lichen corpse" 
 AUTOPICKUP_EXCEPTION="<lizard corpse" 
 AUTOPICKUP_EXCEPTION="<newt corpse"
 AUTOPICKUP_EXCEPTION="<floating eye corpse"
 AUTOPICKUP_EXCEPTION="<wraith corpse"

===Things too good to miss===
Wands of wishing, magic lamps, magic markers, and wands of lasting [[Elbereth]] are useful even in the endgame, when you likely have enough other things on your mind. You don't want monsters zapping create monster or shooting death rays at you.

 AUTOPICKUP_EXCEPTION="<wand .* wish"
 AUTOPICKUP_EXCEPTION="<wand .* create monster"
 AUTOPICKUP_EXCEPTION="<wand .* tele"
 #AUTOPICKUP_EXCEPTION="<wand .* poly"
 
 AUTOPICKUP_EXCEPTION="<wand .* fire"
 AUTOPICKUP_EXCEPTION="<wand .* lightning"
 AUTOPICKUP_EXCEPTION="<wand .* death"
 #AUTOPICKUP_EXCEPTION=">wand .* cold$" # For Juiblex's swamp
 
 AUTOPICKUP_EXCEPTION="<magic marker"
 AUTOPICKUP_EXCEPTION="< lamp"
 AUTOPICKUP_EXCEPTION="> oil lamp"
 AUTOPICKUP_EXCEPTION="> lamp .* oil"
 AUTOPICKUP_EXCEPTION="<amulet .* life"
 AUTOPICKUP_EXCEPTION="<athame"

===Define pickup / drop in-game===
The following rules let you manually override autopickup exceptions without changing the rules at all by [[Name|#naming]] items with strings containing "<" or ">":
 AUTOPICKUP_EXCEPTION="<<"
 AUTOPICKUP_EXCEPTION=">>"

Because rules defined later take precedence over ones defined earlier, if you want these manual overrides to take effect unconditionally, you have to put them at the end of the file.  If you want to be able to name a class of unidentified items with ">" to leave them alone and then individually-name one of those items with "<" to pick it up, add the following rules below that:
 autopickup_exception="< named .*<"
 autopickup_exception="> named .*>"

===One of each kind of magical object===
Usually, you need only one of each type of magical armor / ring / amulet / spellbook / magical tool. Wouldn't it be nice if the game managed that for you? It can if you're willing to class-name all objects immediately.

Below are the rules for armor. You could call the Minetown watchmen's helmets "plain", turning it from its name from its unidentified description to "a helmet called plain" and removing it from the pickup list. See [[User:Tjr|Tjr]]'s [http://alt.org/nethack/userdata/tjr2/tjr2.nh343rc config] for other item types, although it needs to be updated for NetHack 3.6 regex format.

 # AUTOPICKUP_EXCEPTION="<robe"
 # AUTOPICKUP_EXCEPTION="<faded pall"
 # AUTOPICKUP_EXCEPTION="<apron"
 # AUTOPICKUP_EXCEPTION="<polished silver shield"
 # AUTOPICKUP_EXCEPTION="<smooth shield" # blind description
 
 AUTOPICKUP_EXCEPTION=">helmet"
 AUTOPICKUP_EXCEPTION="<conical hat"
 AUTOPICKUP_EXCEPTION="<plumed helmet"
 AUTOPICKUP_EXCEPTION="<etched helmet"
 AUTOPICKUP_EXCEPTION="<crested helmet"
 AUTOPICKUP_EXCEPTION="<visored helmet"
 
 AUTOPICKUP_EXCEPTION=">cloak"
 AUTOPICKUP_EXCEPTION="<tattered cape"
 AUTOPICKUP_EXCEPTION="<opera cloak"
 AUTOPICKUP_EXCEPTION="<ornamental cope"
 AUTOPICKUP_EXCEPTION="<piece of cloth"
 
 AUTOPICKUP_EXCEPTION=">gloves"
 AUTOPICKUP_EXCEPTION="<old gloves"
 AUTOPICKUP_EXCEPTION="<padded gloves"
 AUTOPICKUP_EXCEPTION="<riding gloves"
 AUTOPICKUP_EXCEPTION="<fencing gloves"
 
 AUTOPICKUP_EXCEPTION=">boots"
 AUTOPICKUP_EXCEPTION="<combat boots"
 AUTOPICKUP_EXCEPTION="<jungle boots"
 AUTOPICKUP_EXCEPTION="<hiking boots"
 AUTOPICKUP_EXCEPTION="<mud boots"
 AUTOPICKUP_EXCEPTION="<buckled boots"
 AUTOPICKUP_EXCEPTION="<riding boots"
 AUTOPICKUP_EXCEPTION="<snow boots"

===Keeping ammunition out of monsters' hands===
Especially in the Mines, you will want to collect lightweight but dangerous projectiles and deposit them in a safe location &endash; on a square with a [[scroll of scare monster]], the downstair on a previously cleared level, or underneath a [[boulder]]. This keeps monsters from reusing them against you. (Deactivate daggers if you don't throw them yourself — they're heavy.)

 AUTOPICKUP_EXCEPTION="< arrow"
 ## AUTOPICKUP_EXCEPTION="<elven arrow"
 ## AUTOPICKUP_EXCEPTION="<orcish arrow"
 ## AUTOPICKUP_EXCEPTION="<silver arrow"
 ## AUTOPICKUP_EXCEPTION="<runed arrow"
 ## AUTOPICKUP_EXCEPTION="<crude arrow"
 AUTOPICKUP_EXCEPTION="< ya"
 
 ## AUTOPICKUP_EXCEPTION="<bamboo arrow"
 AUTOPICKUP_EXCEPTION="<crossbow bolt"
 AUTOPICKUP_EXCEPTION="<dart"
 AUTOPICKUP_EXCEPTION="<shuriken"
 AUTOPICKUP_EXCEPTION="<throwing star"
 
 AUTOPICKUP_EXCEPTION="<dagger"
 ## AUTOPICKUP_EXCEPTION="<elven dagger"
 ## AUTOPICKUP_EXCEPTION="<orcish dagger"
 ## AUTOPICKUP_EXCEPTION="<runed dagger"
 ## AUTOPICKUP_EXCEPTION="<crude dagger"
 ## AUTOPICKUP_EXCEPTION="<silver dagger"
 AUTOPICKUP_EXCEPTION="<knife"


===Avoiding loadstones===
With these rules, you should never pick up a loadstone, regardless of your knowledge of loadstones:
 AUTOPICKUP_EXCEPTION="> loadstone"
 AUTOPICKUP_EXCEPTION="<stone called luck"
 AUTOPICKUP_EXCEPTION="< luckstone"
 #AUTOPICKUP_EXCEPTION="< touchstone"
 AUTOPICKUP_EXCEPTION="> rock"
 AUTOPICKUP_EXCEPTION="> gray stone"

When blind, [[gems]] and [[worthless glass]] are called "gems", and all other {{white|*}} are called "stones", so with the following rule, you won't risk picking up loadstones while blind, either:
 AUTOPICKUP_EXCEPTION=">^[a0-9]+ stone"

The leading <tt>^[a0-9]+</tt> ensures that valuable gems with "stone" in their identified name (amber stones, turquoise stones, etc.) are not matched.

===Only exceptions pick stuff up===
If you want only the exceptions to pick anything up, put this rule at the beginning of your file:
 AUTOPICKUP_EXCEPTION=">.*"

This excludes everything, so that you can turn on autopickup, but not actually autopickup anything unless you say so with an exception.

==References==
<references />

==External references==
* [[User:Tjr|Tjr]]'s [http://alt.org/nethack/userdata/tjr2/tjr2.nh343rc config file on NAO] contains a full list of all item descriptions to match against, and an object names mini-spoiler.
* [http://groups.google.com/group/rec.games.roguelike.nethack/browse_thread/thread/cd5606450f694f00/f3b4b9ec9b9e7619?q=#f3b4b9ec9b9e7619 a RGRN thread] with many corpse-related ideas
* [http://www.mindspring.com/~jove/Spoilers/autopickup.txt Autopickup mini-spoiler] (the part about empty pickup_types is wrong)

{{featured}}
[[Category:Options]]
{{nethack-366|offset=1}}}
&&%s&& %s Autopickup exceptions {21722 2007-07-19T19:30:22Z {630 Paxed} redirect to [[autopickup exception]] #REDIRECT [[autopickup exception]]}
&&%s&& %s Sporkhack {22245 2007-09-03T13:50:16Z {51 Andronikus} Moving content and redirecting to SporkHack #redirect [[SporkHack]]}
&&%s&& %s Mine {21853 2007-08-02T16:37:58Z {0 } #Redirect[[Gnomish Mines]] #Redirect[[Gnomish Mines]]}
&&%s&& %s Devnull tournament {36911 2008-12-15T23:49:20Z {523 Marcmagus} Merged into [[:/dev/null/nethack tournament]] #REDIRECT [[:/dev/null/nethack tournament]]}
&&%s&& %s Floor {135348 2020-07-27T01:05:57Z {4000693 Phol ende wodan} bump version, note dark_room option, remove information that is really about rooms specifically {{features}}
'''Floor''', {{white|.}}, is the most common type of [[Dungeon feature|terrain]] in ''NetHack''. It imposes no special restrictions on the [[player]], allowing you to move freely. Most [[room]]s generate with ordinary floor, with a few exceptions such as [[swamp]]s. Floor is also typically found throughout [[special level]]s.

[[Corridor]]s are similar to floors, but they are typically dark and outside of rooms.

You can turn on the [[Options#dark_room|dark_room option]] in order to make lit floor spaces render on the map even when they are out of your line of sight.

[[Category:Dungeon features]]
{{nethack-366}}}
&&%s&& %s Spellcaster {139537 2021-05-05T02:01:36Z {4001463 Actual-nh} Grammar/style The more you learn and cast spells, the more you are a spellcaster. All roles have some ability to learn and cast [[spells]].

[[Healer]]s, [[monk]]s, [[priest]]s and [[wizard]]s enter the [[Dungeons of Doom]] already knowing a spell or two. Other [[role]]s start knowing no spells, but can learn spells by finding [[spellbooks]].

Whether to wear [[armor]] that reduces [[spellcasting]]'s success rate is a strategic choice. Some heroes wear metal armor most of the time and take it off specifically for noncombat/postcombat spellcasting (e.g., [[clerical]], [[divination]] and [[healing]] spells), or when preparing for combat (e.g., [[protection]], {{spell of|confuse monster}}, and [[haste self]]). A hero who eschews metal armor, so that they may freely use [[attack]] and [[enchantment]] spells as they encounter [[monsters]], is primarily a spellcaster. Wearing a robe, usually as a starting item or taken from an [[aligned priest]], is a spellcaster option.

In the early game, even wizards will sometimes wear metal armor; any hero who has depleted their energy may as well wear metal armor while they regain energy.  In the late game, most of the [[ascension kit]] armor items do not hinder spellcasting anyway, such as [[boots of speed]], [[helm of brilliance|helms of brilliance]], and [[dragon scale mail]]. High-level, high-intelligence characters often have good spellcasting success rates even if they wear [[gauntlets of power]] and/or a [[small shield]].

[[Category: Your character]]
{{stub}}
{{nethack-343}}}
&&%s&& %s You hear a crunching sound {22306 2007-09-06T15:46:13Z {17 Addps4cat} "sound" messages should redirect to pages that cause them. and the page had mistakes anyway #REDIRECT [[Metallivore]]}
&&%s&& %s Bone file {21960 2007-08-14T06:24:31Z {482 Kusma} #REDIRECT [[Bones]] #REDIRECT [[Bones]]}
&&%s&& %s Gravestone {21963 2007-08-14T12:38:40Z {754 Snicker} Redirecting to [[Headstone]] #REDIRECT [[Headstone]]}
&&%s&& %s Template:Forumheader/Watercooler {73947 2011-10-05T20:57:16Z {0 } Undo revision 73923 by [[Special:Contributions/Tjr|Tjr]] ([[User talk:Tjr|talk]]) There was a bug in the previous version but was fixed with MediaWiki 1.17.0 <includeonly>{{Forumheader|Watercooler}}</includeonly>

<!-- Please put your content under this line.  Be sure to sign your edits with four tildes ~~~~ -->
<noinclude>[[Category:Templates|{{PAGENAME}}]]</noinclude>}
&&%s&& %s Template:Forumheader {73946 2011-10-05T20:56:10Z {0 } Undo revision 73924 by [[Special:Contributions/Tjr|Tjr]] ([[User talk:Tjr|talk]]) There was a bug in the previous version but was fixed with MediaWiki 1.17.0 <div id="forumcontentSub"><span class="subpages">&lt; [[Forum:{{{1}}}]]</span></div>
<includeonly>[[Category:{{{1}}}|{{PAGENAME}}]]</includeonly>
<noinclude>[[Category:Templates|{{PAGENAME}}]]</noinclude>}
&&%s&& %s Category:Forums {73519 2011-09-25T00:49:32Z {0 }  #redirect [[:Category:Watercooler]]}
&&%s&& %s Category:Help desk {73520 2011-09-25T00:50:08Z {0 }  #redirect [[:Category:Watercooler]]}
&&%s&& %s Category:Watercooler {77131 2012-04-08T16:52:23Z {0 }  This is a list of topics from the [[Forum:Watercooler|Watercooler]].
[[Category:NetHackWiki]]}
&&%s&& %s Trice {76218 2012-02-08T18:19:40Z {630 Paxed} fix double redirect #REDIRECT [[Cockatrice]]}
&&%s&& %s Languages {81448 2012-11-10T10:21:42Z {4000180 Bcode} fix double redirect #REDIRECT [[NetHack in other languages]]}
&&%s&& %s NetHack in other languages {146587 2022-07-08T14:30:02Z {4000251 Netzhack} /* Character sets */ Bold to identify paragraph topics {{RogueBasin|Translation}}
[[NetHack]]'s text output is in English. Although the program's structure does not easily lend itself to [[Wikipedia:Internationalization and localization|localization]] because English [[wikipedia:Morphology_(linguistics)|morphology]] and [[wikipedia:Syntax|syntax]] are hard-wired into the [[source code]] on all levels, several localization projects currently exist.

== German ==

[[User:Netzhack|Tony Crawford]] and Karl Breuer have completed a German-localized version called [http://www.netzhack.de/ NetzHack] (note the 'z'), which runs on GNU/Linux, *BSD, and OS X (console and X11), and on Win32 (console and Windows graphics). Early versions up to NetzHack v1, released in 2017, were based on NetHack 3.4.3; NetzHack v2.0, released in December 2021, is based on NetHack 3.6. Source and binaries available [http://www.netzhack.de/download/ here].

A different German translation attempt by [[User:Bhaak|Patric Mueller]] called [http://nethack-de.sourceforge.net/ NetHack-De] was released as a playable, although incomplete, alpha release on 11 October 2007. The [https://sourceforge.net/projects/nethack-de/files/nethack-de/3.4.3-20120127a/ latest release] (2012) includes source code, a [[Debian]] package and a graphical Windows binary.

== Japanese ==

The Japanese version [http://jnethack.sourceforge.jp/ JNetHack] by Issei Numata has been in existence for several years. For those who don't read Japanese, there's some outdated information in English at [http://www.jnethack.org/ jnethack.org].

Sourceforge.jp also carries a [http://sourceforge.jp/projects/jslashem/ JSlash'em], [http://sourceforge.jp/projects/jsporkhack/ JSporkHack] and [http://sourceforge.jp/projects/junnethack/ JUnNetHack] as well as a Japanese [https://sourceforge.jp/projects/nethack-users/ NetHack Resources Project].

[[NetHack brass]] can be compiled as an English or Japanese version.

== Spanish ==

Ray Chason has published [https://sourceforge.net/projects/nethack-i18n/ Internationalized NetHack] as a work in progress.  It presently supports English and Spanish, and will eventually supersede [http://spanish-nethack.sourceforge.net/ Spanish NetHack].

== Korean ==

Several starts have been made to produce a Korean version of NetHack:

* [https://wiki.kldp.org/wiki.php/nethack-ko nethack-ko]. The last update was on May 29th, 2007.

* [https://sites.google.com/site/konethack 한글 넷핵 (Hangul Nethack / Korean Nethack)]. The last update was on March 2nd, 2013. This project was based on nethack-ko, but ended up nowhere as the upstream project was cancelled.

* Another Korean translation is in progress, based on jnethack, at [https://github.com/teabarley/KRNethack KRNethack].

== Incomplete or stalled translations ==
On January 28th 2009 a Chinese translation called [http://code.google.com/p/nethack-cn/ nethack-cn] was begun on Google Code but the last update was on June 25th 2009.

A SourceForge project for a French translation called [http://sourceforge.net/projects/nethack-fr/ nethack-fr] was registered on August 6th 2009. The last update was on October 29th 2009. The project is flagged as no longer under active development; the last commit was on January 20th 2011.  There is a French translation of the [http://web.archive.org/web/20070110033355/www.eleves.ens.fr/home/grasland/nethack/tutoriel/ guidebook] and some [http://web.archive.org/web/20080404185030/www.eleves.ens.fr/home/grasland/nethack/tutoriel/spoilers/liste.html spoilers].

The first commit of GitHub project for a Italian translation called [https://github.com/Dargor87/nethack-it nethack-it] was on December 4th 2009. The last commit so far was on January 27th 2010.

A SourceForge project for [http://sourceforge.net/projects/nethack-pt/ a Portuguese translation of NetHack and Slash'Em] was registered on May 3rd 2004 but this was also the only activity on that project.

==Internationalization==

Ray Chason has launched the [http://sourceforge.net/projects/nethack-i18n/ NetHack-i18n] project, also called Internationalized NetHack, which is aimed at adapting NetHack for easier translation to other languages. The project was [http://sourceforge.net/p/nethack-i18n/code/ci/master/tree/ active] as of April 2013.

==Current NetHack localization strategies==

The existing NetHack localization projects differ in their approaches to the task.

===The problem===

Because NetHack has output text in the form of string literals scattered throughout the code, the customary approach is for the translator to go through the source code and substitute translations for the string literals. What complicates this process is the fact that many messages are composed of elements that can vary with the runtime context. For example, in an output statement like this:

 pline("%s hits %s.", objectname, monstername);

the variables "objectname" and "monstername" may be singular or plural, masculine or feminine, and may be introduced by "a" or "the". The words to be inserted must be formed appropriately before the output function call.

At various points in the program, NetHack's output messages vary with second and third person verb forms, singular and plural verb forms, and noun inflections by case, gender, and number.

In English, this is easy: word forms do not change with grammatical gender or case, and most nouns change from singular to plural simply by the addition of a trailing 's'. There is only one form of the definite article ("the"), and there are two forms of the indefinite article ("a" and "an") which are grammatically equivalent. In other languages, morphology can be much more complex: Spanish, for example, has four forms of the definite article, depending on whether a noun is singular or plural, masculine or feminine; German has six, depending on number, gender, and case.

Furthermore, some languages have mandatory contractions (Spanish contracts the preposition and article "a"+"el" into "al"; French contracts the preposition and article "de"+"le" into "du", etc.).

Some examples of word and sentence morphology in Spanish:

* "¡Idefix golpea al orco!" (subject and object are both nouns)
* "¡Idefix lo golpea!" (object is a pronoun, and goes before the verb)
* "¡Golpeas al orco!" (subject is a pronoun ("tú") and is omitted; verb changes to second person singular)
* "¡Lo golpeas!" (both modifications apply)

(As it happens, monsters in NetHack always act or are acted upon singly, not collectively, which simplifies matters sometimes. On the other hand, [[stackable]] objects can be singular or plural, and a pair of gloves or shoes is, in the game's logic, a single object, but may call for a plural verb form. Furthermore, many objects are named differently at different times – by name, by description, or by class – and so an object name or a pronoun that replaces "it" can vary even for the same object.)

Word order can also change depending on certain conditions, such as whether the subject is a common noun, a proper noun or a pronoun. The message generation routine must also provide sentence capitalization (in languages that require it) after such rules have been applied.

Original NetHack contains a few functions to modify linguistic elements for output, such as {{function|objnam.c|vtense|x}} and {{function|objnam.c|makeplural}}, and {{function|hacklib.c|s_suffix}}. But since English is not a highly inflected language, even these do not actually operate on grammatical categories, but tend to manipulate words by superficial characteristics: {{function|objnam.c|an|x}} for example chooses between the indefinite article forms "a" and "an" merely on the basis of the following word's first letter, and has no concept even of subject or object case. NetHack's function {{function|objnam.c|the|x}} prefixes a definite article to any noun, but it becomes useless in German, for example, because the form of the definite article depends on the noun's gender and number, and on the grammatical case in which it is used.

These technical and grammatical problems are all in addition to the fundamental problems inherent in any translation. NetHack in particular is famous for the humor it incorporates, much of which depends on English wordplay (jokes about pit vipers in pits, for example), idiomatic expressions ("everything but the kitchen sink"), and American cultural references ("core dumped", Keystone Kops, ...). The stock in trade of a translator is to achieve an equivalent tone and mood in the target language. For NetHack, that means translating wordplay where possible, compensating for untranslatable [[pun]]s with new target-language jokes as the opportunity arises, and generally choosing similarly humorous (or menacing or archaicizing) wording in the target language in keeping with the spirit of the original game. Conceivably, references to the target culture could be added in analogy to the original game's references – a German version of the Castle level might contain some allusion to the Kafka story, for example.

===Localization approaches===

====NetHack-i18n====
Internationalized NetHack aims to systematize the process of string replacement using [https://www.gnu.org/software/gettext/ Gettext] together with a scriptable [[wikipedia:printf format string|printf]]-like system to handle the grammar bits.

Gettext's grammar support is minimal. It [https://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms supports plurals].  NetHack-i18n needs such things as support for changing word order and noun cases, and encodes them in two ways:

* by extending the printf-like syntax to include formatters such as %3${g/handsome/beautiful}, where the number after the % is a parameter number (this is a POSIX extension to printf) and the part between the braces is interpreted by a [http://www.ruby-lang.org/ Ruby] script; and
* by defining "joining rules" at the start and end of each substitution, to handle mandatory contractions and such rules as "a/an".

For example, the output statement in [[mthrowu.c#line227]],

 pline("%s is blinded by %s.", Monnam(mtmp), the(xname(otmp)));

becomes in NetHack-i18n:

 pline(NHFormat(T_("%1${Nt$} is blinded by %2${nt}.")) << mtmp << otmp);

This is C++ rather than C, and the NHFormat class overloads the << operator and the cast to std::string to make this work; it's rather similar to [http://www.boost.org/doc/libs/1_55_0/libs/format/ Boost Format].  "%1${Nt$}" means substitute the first parameter, and use a locale-specific formatting with "Nt$" to indicate the specific formatting.

The code for the English locale interprets "Nt$" with a monster parameter as follows:

* Initial "n" means the name of the monster;
* The "n" is made capital, to indicate the output should be capitalized;
* "t" means prefix "the" if appropriate; and
* "$" means show the saddle if the monster does not have a name.  ("s" would mean "always show the saddle.")

With an object parameter, initial "n" means show the name, and "t" again means use "the" if appropriate.

T_() consults the message catalog, which uses the gettext syntax, but does not support plurals.  The message catalog for the Spanish locale has this entry:

 msgid "%1${Nt$} is blinded by %2${nt}."
 msgstr "%1${:es_intrans,Nl$,es} cegad%1${oa} por %2${nl}."

Note that the first parameter is substituted twice.  This is permitted, and indeed very frequent.  The substitutions are as follows:

* %1${:es_intrans,Nl$,es}: Both the English and the Spanish locales adopt the convention that a format string beginning with a colon names a method in the Ruby code.  Thus ":es_intrans,Nl$,es" invokes a method called es_intrans.  (The name is a misnomer:  you use :es_trans if the direct object is a monster, and :es_intrans otherwise.)  The commas (any non-alphanumeric character may be used) delimit parameters to es_intrans.  "Nl$" is the formatter for the monster, with "l" indicating the definite article, and "es" is the verb. If the monster cannot be seen, the format routine returns "él" or "Él", and es_intrans omits it and capitalizes the verb if appropriate.  (This pattern is overkill for the particular case, as the message does not appear if the monster isn't visible, but it frequently appears elsewhere.)
* %1${oa}: "oa" means substitute "o" if the parameter is a masculine noun, or "a" if feminine.  There are several other such substitutions, and they may be used with strings or objects – or the hero ("¡Destruid a %0${el} ladr%0${ón}, mi%1${p} mascota%1${p}!").
* %2${nl}: Show the name of the object with the definite article.

====Spanish NetHack====
Spanish NetHack handles grammar rules by coding special routines to handle them, much as the unpatched NetHack does.  For example, the output statement in [[mthrowu.c#line227]],

 pline("%s is blinded by %s.", Monnam(mtmp), the(xname(otmp)));

becomes in Spanish NetHack:

 pline("%s es cegad%c por %s.", Monnam(mtmp),
     mon_gender(mtmp)? 'a' : 'o', the(xname(otmp)));

Monnam, the, and xname retain their names from the original code, though "the" in fact uses the appropriate Spanish article.  mon_gender returns nonzero if the monster's name is a feminine noun.

====NetzHack====
NetzHack began with the idea that the developers just wanted to translate, not to rewrite the program. Or, in other words: NetHack is a prime example of how you ''don't'' code for localization, and trying to fix that was pretty near hopeless. So the localization strategy was as follows:

* Translate string literals in the source code
* Create a new data type, usage_t, to contain the usage information of a context in which a noun, adjective or pronoun appears: number (singular or plural), case (nominative, genitive, dative or accusative), gender (masculine, feminine or neuter), and determiner (the, a/an, this, your, or none).
* Write a new module, german.c, with the functions necessary to inflect German nouns and adjectives for a specified usage, and add a dictionary, nouns_de.h, which associates each German noun in the game with a reference to its declension paradigm.
* Replace functions that produce an object or monster name, such as {{function|objnam.c|doname|x}} or {{function|do_name.c|mon_nam|x}}, with expanded versions that take a usage_t argument and inflect the output noun phrase for the usage indicated.
* Write human-readable macros in a new header, german.h, to call those functions with specific values of the usage parameters, then use these macros as drop-in replacements for the original functions to provide German grammar throughout the code. For example, the output statement in [[mthrowu.c#line227]],

 pline("%s is blinded by %s.", Monnam(mtmp), the(xname(otmp)));

becomes in NetzHack:

 pline("%s wird von %s geblendet.", Monnam_nomsing(mtmp), the_xname_dat(otmp));

Monnam_nomsing and the_xname_dat are macros that call German grammar-sensitive versions of {{function|do_name.c|mon_nam|x}} and {{function|objnam.c|xname|x}}, passing them the appropriate usage parameters for this message. The macro definitions (in german.h) look like this:

 #define Monnam_nomsing(m) Monnamg((m), (usage_t){SINGULAR, GENDER_UNKNOWN, CASE_NOMINATIVE, ARTICLE_DEFINITE})
 ...
 #define the_xname_dat(o) xnameg((o), (usage_t){(o)->quan>1L?PLURAL:SINGULAR, GENDER_UNKNOWN, CASE_DATIVE, ARTICLE_DEFINITE})

The replacement functions, with names ending in 'g' for German, take the same arguments as the original naming functions (in this case, a pointer to a monster or object structure), plus a usage argument that specifies number, gender, case and determiner. In our example, the noun phrase that designates the monster must be in the nominative case, singular, and capitalized; the noun phrase for the thrown object must be in the dative case and have a definite article. The grammatical gender depends on the exact word that ends up being used to designate the monster or object, so it is indicated as "unknown" in these function calls. (Actually, NetzHack also hijacks the names of the original functions in [[extern.h]] to make them point to the nominative-singular macros, so that the original {{function|do_name.c|Monnam|x}}(mtmp) call above doesn't really need to be edited at all.) Since the determiner is a necessary part of the usage parameter – that is, it influences the form of any adjective preceding the noun – the nested call {{function|objnam.c|the|x}}({{function|objnam.c|xname|x}}(...)), a frequent occurrence in NetHack, is always replaced (as in the example) with a single function call via one of the macros the_xname_{nom, gen, dat, acc} (for nominative, genitive, dative or accusative case).

The frequent dictionary look-ups to determine the necessary declension pattern for each monster or object noun used might be a drawback if computing power had not grown tremendously since NetHack was young. NetzHack caches recent look-ups, though, which is especially helpful since nouns are often repeated in output in a given game context. There are 1796 nouns in the dictionary.

NetzHack, like the original, is written entirely in [[ANSI C|C]].

The minimal-effort strategy does not bring the game any closer to [[wikipedia:UTF-8|UTF-8]] compatibility; however, since the changes from the original program structure are limited, there might be hope of patching in a future UTF-8 port of NetHack without too much adaptation. In fact, since recent versions of Windows have at last gone the way of other operating systems and use UTF-8 internally, the adaptation will probably consist of undoing the changes required to support German letters in ISO 8859-x encoding.

===Monster and object names===

The English names of monsters and objects are string literals in [[monst.c]] and [[objects.c]]. The NetHack build process compiles and invokes the utility makedefs to convert these names into preprocessor symbols, contained in the files include/pm.h and include/onames.h. The program then identifies objects and monsters by the numeric constants associated with those preprocesor symbols. The problem for translation is therefore that changing the names in [[monst.c]] and [[objects.c]] would change the preprocessor symbols, and almost every other part of NetHack would then have to be edited accordingly.

Spanish NetHack and NetHack-de solve this problem by replacing each string in monst.c and objects.c with a preprocessor symbol, and providing new headers to substitute either the original English or translated names for these symbols. In this way, distinct versions of objects.o and monst.o are built with the names in English and in the target language.

NetzHack, on the other hand, adds an element to the object and monster data types, struct obj and struct mon, so that each kind of monster and object has both its translated German name and, invisibly to the user, its original English name too. Thus pm.h and onames.h are generated using the original names as before.

NetHack-i18n, because it has Gettext available, leaves the monster and object tables in English and converts them at run time.  Another approach might be to bite the bullet and replace the preprocessor symbols in pm.h and onames.h with their translated versions.  No known translation takes this approach.

===Input parsing===

The largest problem here is support for [[wish]]es. Every translation must rewrite the {{function|objnam.c|readobjnam|x}} function to parse an object name according to the rules of the target language.

NetHack-i18n first removes the dungeon feature wishes, replacing them with a new [[extended command]], called "dfeature" in the English locale; and then splits the rest into a parser, which is placed in the Ruby script, and a rule-enforcer, which remains in the core code.

===Character sets===
[[ASCII]] is inadequate for most languages other than English.  All translations use a larger character set for messages.  Case mappings and fuzzy matches for wishes and other inputs must take the character set into account; if the Spanish-language user wishes for "cota de escamas de dragon gris", he should get a [[gray dragon scale mail]], even though the correct spelling is "dragón".

'''JNetHack''' uses [[wikipedia:EUC-JP|EUC-JP]], with tests in the code to detect if the source has been converted to [[wikipedia:Shift-JIS|Shift-JIS]]; EUC-JP is adapted for [[Unix]]-like environments, and Shift-JIS for [[Microsoft Windows]].

'''Spanish NetHack''' encodes all messages in [[wikipedia:ISO-8859-1|ISO-8859-1]], while leaving the map symbols in [[wikipedia:code page 437|code page 437]].  Reduced [[IBMgraphics]] modes are available for users who do not have code page 437 configured.  Slight hackery is needed to support the different character sets, because map symbols can appear outside the map in three places:
* in the response to the '/' command;
* in the [[options]] list, where [[boulder]]sym is listed; and
* in the status line of the [[TTY]] and [[Win32]] [[user interface]]s.

As '''NetHack-i18n''' is meant to be language-neutral, it uses [[wikipedia:Unicode|Unicode]] throughout. Any user input is encoded in Unicode, and user interfaces are expected to support it. The TTY interface is abandoned in favor of a modified [[Curses interface|Curses]] interface, and the Curses library must support wide characters.

'''NetHack-De''' encodes all messages in ISO 8859-1. As a result, IBMgraphics doesn't work (because it uses a different character set), although DECgraphics does. User wishes are normalized before being parsed so that the user can enter wishes in any charset: to wish for "Rüstung" ("armor"), for example, the user may type "ruestung" in ASCII (the German letter ü originated as a combination of 'u' and 'e', hence "ue" is a [[wikipedia:Umlaut_%28diacritic%29#Printing_conventions_in_German|conventional alternative]] where ü is not available), or "Rüstung" in ISO-8859-1, or "RÃ¤stung" in [[wikipedia:UTF-8|UTF-8]]. (This feature is part of a preliminary UTF-8 support: a UTF-8 capable terminal would show "Rüstung", but be unable to display umlauts in the rest of Nethack-De's ISO 8859-1-encoded messages.)

'''NetzHack''' is also in ISO-8859-x. The MS Windows console version actually uses two charsets (or "code pages" in Microspeak): the dungeon map is drawn in the system's default code page, while the Windows 1252 code page, containing the German characters ÄÖÜäöüß, is used for text messages.

In recent updates of Windows 10, Microsoft has finally begun to offer some support for UTF-8 output, which has been standard for some time now in the Unix world. Future versions of NetHack in other languages can therefore be expected to use UTF-8 encoding.

UTF-8, the ISO-8859-x encodings, and Shift-JIS are all supersets of the 7-bit ASCII used by original NetHack, but they are all mutually exclusive. Only UTF-8 is designed to encode the writing systems of all languages in one scheme. Hence a fundamental port to UTF-8 encoding might facilitate other translation projects. 

[[Category: Variants]]}
&&%s&& %s Localization {81449 2012-11-10T10:22:14Z {4000180 Bcode} fix double redirect #REDIRECT [[NetHack in other languages]]

[[Category: Development]]}
&&%s&& %s Translation {81450 2012-11-10T10:22:46Z {4000180 Bcode} fix double redirect #REDIRECT [[NetHack in other languages]]}
&&%s&& %s An opera cloak {57042 2010-11-18T19:04:45Z {831 Tjr} Redirected page to [[Randomized appearance#Cloaks]] #REDIRECT [[Randomized_appearance#Cloaks]]}
&&%s&& %s Ruby potion {57041 2010-11-18T19:04:15Z {831 Tjr} Redirected page to [[Randomized appearance#Potions]] #REDIRECT [[Randomized appearance#Potions]]}
&&%s&& %s SporkHack {147569 2022-08-16T01:23:49Z {4000693 Phol ende wodan} /* Major changes */ un-orphan skull by linking it here with other sporkhack items [[Image:Sporklogin.jpg|thumb|right|400px|Sporkhack's login screen (telnetted to sporkhack.com)]]
'''SporkHack''', at [http://sporkhack.com sporkhack.com], is a [[variant]] of NetHack 3.4.3 by Derek Ray aimed at game balance.  Its stated purpose was to "try to make the game more interesting for experienced/skilled players, while making it no harder...for the newbie." [http://groups.google.com/group/rec.games.roguelike.nethack/msg/35e5d0a0d0427d66].  The latest developed version (0.6.5) can be played on a [[public server]] at [ssh://slashem@slashem.me em.slashem.me] or [ssh://nethack@hardfought.org ssh nethack@hardfought.org]
(USA)/[ssh://nethack@eu.hardfought.org ssh nethack@eu.hardfought.org] (EU). To discuss, join #hardfought on [[Libera]] IRC.

Development of SporkHack was restarted in July 2017 by community members Tangles and K2, with the blessing of the original author. The latest version is now 0.6.5 - last build Wed Jun 3 16:07:27
2020 (git commit fcddb5b). The repository can be found at https://github.com/NHTangles/sporkhack - the revived development of SporkHack focuses on bugfixes and functionality enhancement; no changes affecting gameplay or the original author's intent have been made at this time. This version fixes a long-standing bug regarding stairs not being generated on certain levels (Minetown, the Oracle level, certain quest levels) as well as several other bugs that could crash the game.

From the original developer's announcement on rec.games.roguelike.nethack, 8 July 2007:

:"I've been working on a fork of 3.4.3 that has a number of balance-oriented changes, largely to try to address the problems I've outlined in prior posts as well as just provide a platform for experimental changes.  It's been in test among a small group of players for about a month now; it seems time to open it up and see what others think.
:In short, one of the purposes of this fork is to try to make the game more interesting for experienced/skilled players, while making it no harder (or, in a couple cases, slightly easier) for the newbie.  It's also going to be an attempt to try to increase variety in the standard 'ascension kit', since right now it is pretty well defined.
:There is a server available for play at [telnet://sporkhack.nineball.org this] telnet link; the very rough changelog and description can be seen at [http://sporkhack.nineball.org this] webpage.  A patch to match the server state will eventually be published on the website as well, once I confirm that the patches will properly apply to a vanilla 3.4.3 distribution.
:There is a channel #sporkhack on irc.freenode.net where discussions take place relatively frequently; there is a bot there, much like #nethack's Rodney, who will announce deaths and ascensions as they occur.
:Please keep in mind that these changes should be considered to be alpha- or beta- level; there may well be bugs, and these bugs may affect your gameplay.  I do try to fix bugs found as rapidly as possible, but I can't always update the server immediately since I have others' games to consider as well, especially if I have a patch in the queue that will break savefile compatibility.
:This is a live fork!  For the near future, I will still be making a great deal of changes, and if an imbalance is found with existing changes, they are not set in stone -- if something is too hard, I will certainly consider toning it down to a more reasonable level.  By the same token, if something I add makes things too easy, I will probably tone _that_ down too.
:I hope you enjoy it."

== Major changes ==
These are the most visible major changes; there have been several changes under the hood that aren't visible for players.

*Levels might generate adjacent rooms (without a corridor in between)
*[[Gehennom]] fill levels are mines-style with lava spills, not mazes.
*New special level variants of minetown, bigroom and medusa, and other levels tweaked.
*[[Caveman]] quest levels thematically in jungle.
*[[Knight]]s can be chaotic.
*[[Elbereth]] and ring of [[conflict]] nerfed.
*New artifact weapons: [[Keolewa]] and [[Dirge]].
*Most of the less popular artifacts have new properties
*New items: [[amulet of power]], [[gnomish armor]], [[boots of molasses]], [[iron safe]], [[gauntlets of fortune]], [[wand of wind]], [[skull]].
*New monsters: [[locust]], [[grey fungus]] (BEWARE), [[magical eye]], [[gold dragon]], [[snark]], [[boojum]].
*New spells: reflection, repair armor, detect foot.
*Intrinsic resistances are percentages, not binary.
*[[Dragon scales]] and [[dragon scale mail]]s have extra abilities.

== lev_comp changes ==
Sporkhack incorporates the [http://bilious.alt.org/?20 new level compiler patch], but also has several other changes.
The differences between vanilla [[des-file format]] are:
*No more <tt>MAZE</tt>; all special levels start with <tt>LEVEL:"filename"</tt>. To mark a level mazelike, you add <tt>FLAGS:mazelevel</tt>.
*<tt>IF [50%] THEN ... ELSE ... ENDIF</tt> now uses brackets, so resembles C: <tt> IF [50%] { ... } ELSE { ... }</tt>
*<tt>ROOM</tt> (and <tt>SUBROOM</tt>) contents are inside brackets.
*New command <tt>RANDLINE</tt> to create random river-like structures: <tt>RANDLINE:random,random,'L',lit,25,2</tt>
*New command <tt>TERRAIN</tt> to explicitly set map character(s) in certain locations: <tt>TERRAIN:(55,14),'-',unlit</tt>
*New command <tt>SPILL</tt> to create random pool-like structures: <tt>SPILL: random, 'L', north, 20, lit</tt>
*New command <tt>REPLACE_TERRAIN</tt> to replace a percentage of one map character with another map character inside an area: <tt>REPLACE_TERRAIN:(01,01,74,18), 'P', '.', lit, 15%</tt>
*New command <tt>EXIT</tt> to exit the level creation immediately.
*New command <tt>GRAVE</tt> to create a grave, with either a specified epitaph, a random one, or no text: <tt>GRAVE:(1,2), "Epitaph text goes here"</tt>
*Level initialization has three different modes:
**<tt>INIT_MAP:solidfill,'X'</tt> replaces the now-gone <tt>MAZE:"foo",'X'</tt>. Also takes an optional light-state parameter.
**<tt>INIT_MAP:mazegrid,' '</tt> replaces the now-gone <tt>MAZE:"foo",random</tt>
**<tt>INIT_MAP:mines, ...</tt> is the old <tt>INIT_MAP</tt>
*Map <tt>GEOMETRY</tt> also accepts absolute coordinates, for example <tt>GEOMETRY:(45,10)</tt>
*<tt>MAZEWALK</tt> can take two optional parameters, a boolean that tells whether the maze should get stocked with standard maze items and monsters, and a map character that is used as the floor of the maze. For example: <tt>MAZEWALK:(30,10),west,false,'L'</tt>.
*New level flags: "shroud", "mazelike", "stormy" and "graveyard".
*In <tt>MAP ... ENDMAP</tt>, the character '<tt>x</tt>' is "transparent" map character.
*Allows <tt>CONTAINER</tt> inside another; contents are inside brackets.
*<tt>WALLIFY</tt> can take an optional region to wallify: <tt>WALLIFY:levregion(1,1,70,20)</tt>
*<tt>OBJECT</tt> has several new optional parameters: <tt>quantity:X, recharged:X, eroded:X, buried, lit, locked, broken, trapped, invisible, greased</tt>.
*<tt>MONSTER</tt> has several new optional parameters: <tt>female, invisible, cancelled, revived, avenge, stunned, confused, fleeing:X, blinded:X, paralyzed:X, seen_traps:X</tt>
*Looping: <tt>LOOP [50] { ... }</tt>
*Switch-statements:
 SWITCH [6] {
   CASE 0: ... BREAK
   CASE 1: ... BREAK
   CASE 2: ... BREAK
   DEFAULT: ...
 }
*It's possible to define what items a monster gets; the inventory is given inside brackets after the MONSTER-definition.
*It's possible to override normal random monster generation chances; quest levels use this method: <tt>MON_GENERATION:86%, (64,"tiger"), (16,"ape"), (10, 'S')</tt>

== Minor changes ==

* Addition of the [[menucolors]], [[statuscolors]], and [[MSGTYPE]] patches.
* The character generation screen is similar to [[angband]] and similar [[roguelikes]].
[[Category:SporkHack]]
[[Category:Variants]]}
&&%s&& %s Ability {22089 2007-08-20T01:40:38Z {458 Kernigh} I was not sure if "[[ability]]" is [[attribute]] or [[property]], so I wrote this disambiguation page with an explanation. An '''ability''' might be:

* an '''[[attribute]]''', such as [[strength]] or [[wisdom]]. The [[potion of gain ability]] and [[potion of restore ability]] act on attributes.
* a '''[[property]]''', such as a [[resistance]] or the effect of a [[ring]]. For example, the [[attrib.c#adjabil|<tt>adjabil</tt> function]], in attrib.c of the source code, adjusts your innate properties to match your current level.

{{disambig}}}
&&%s&& %s Slashem {22121 2007-08-21T19:43:01Z {482 Kusma} #REDIRECT [[SLASH'EM]] #REDIRECT [[SLASH'EM]]}
&&%s&& %s Artifact weapons {22221 2007-08-30T23:47:27Z {0 } Redirecting to [[Artifact weapon]] #REDIRECT [[Artifact weapon]]}
&&%s&& %s Book of the dead {22236 2007-09-02T19:20:58Z {0 } Redirecting to [[Book of the Dead]] #REDIRECT [[Book of the Dead]]}
&&%s&& %s Oversatiated {22241 2007-09-03T10:06:43Z {208 Djao} redirect: Nutrition #REDIRECT [[Nutrition]]}
&&%s&& %s Purse {148238 2022-09-26T11:58:16Z {4001279 Umbire the Phantom} specifics + variants Your '''purse''' or '''wallet''' is the implied, non-physical item that acts as the inventory slot for the [[gold piece]]s you are carrying, and what the game will refer to for any interactions involving money on your person. The amount of gold in your purse/wallet appears on the [[status line]].

The game uses both terms somewhat interchangeably, and as such the article will use the appropriate term based on the context and related messages. Any gold stashed in a [[bag]] or other [[container]] is not considered part of your purse or wallet, and thus not included in the count for relevant events; this article only refers to the open inventory unless otherwise specified.

==Player actions==
You can display the amount of gold you have in your wallet at any time by pressing {{kbd|$}}. In a [[shop]], this will also display any credit or debt you have.

==Relevant items==
One of the failure effects of [[Spellbook#Failure effects of spellbook reading|reading a spellbook]], but failing to learn the [[spell]], is causing all the gold in your inventory to disappear; the gold cannot be recovered.

==Gold and dungeon features==
[[Dipping]] an item in a [[fountain]] may occasionally cause you to lose up to 10% of your current gold. If this occurs in a fountain you have already found [[gems]] or gold in, you will be able to find gems and gold in it again; remember that the fountain has a chance of drying up and disappearing with each dip.

[[Sitting]] on a [[throne]] may cause all the gold you have to vanish, similar to failure effects from reading a spellbook. [[Looting]] a throne while [[confused]] and carrying gold may generate a throne room monster; this deposits a random amount of your gold (up to all of it) into its inventory. However, if there is a [[chest]] on the level, the gold will be relocated to that chest instead of generating a monster.

==Relevant monster actions==
[[Leprechaun]]s will approach you or run from you depending on if you have any gold in open inventory, among other factors; if your wallet is empty, they will try to evade you most of the time. If you have gold in your purse, they will approach and try to attack as normal; if a leprechaun successfully hits you while you are carrying gold, they will steal it, attempt to [[teleport]] away and flee from you temporarily. The stolen gold will be added to the gold they were created with upon generation, and can be retrieved by killing them. Players can do the same to other monsters by [[polymorphing]] into a leprechaun.

If a [[vault]] guard enters the vault and asks for your name, and your answer is not one of [[Croesus]], Kroisos or Creosote (unless you have already killed him), you will be asked to drop all of the gold you are carrying&mdash;this includes gold you also have stashed in carried containers, as opposed to just in your wallet. The guard will lead you out once you have done so, and will attack if you take too long.

{{upcoming|3.7.0|Per {{commit|2591a21cf0f752331124acc52750c0f5b91c4c29|commit 2591a21}}: Leprechauns that steal your gold have a chance to bury it in the ground after teleporting if their destination is in a non-shop room out of your sight.}}

==Strategy==
When you are in certain situations where you might lose your gold, you can protect it by removing it from your purse. If you have a [[bag]], you can hide your gold in there. You could also [[stash]] your gold into a [[chest]] or [[large box]], or just drop or [[throw]] it on the floor. Note that leprechauns can still snatch gold from underneath your feet, if you are standing directly on it.

Since [[demon lord]]s seeking bribes only care about gold visible in your purse and will ask for an amount less than or equal to it, it may be worth carrying around a handful of gold pieces in open inventory beforehand if you would prefer to pay particular demon lords off.

==History==
The purse function has been present as early as [[NetHack 1.3d]]; in that version, using the command would cause you to physically stop and count your coins, an action that takes several turns and leaves you vulnerable to monsters in the meantime.

==Messages==
{{message|Your wallet contains <x> zorkmid(s).|You used {{kbd|$}} to check the gold you have on hand.}}
{{message|Your wallet is empty.|As above, but you have no gold.}}<br><br>

{{message|You notice you have no <gold/money>!|You failed to learn a spell from reading a spellbook, or else sat on a throne, and the gold in your open inventory vanished. [[NetHack 3.6.0]] uses "money", where all other versions use gold.}}
{{message|You feel a strange sensation.|As above, but you had no gold.}}<br><br>

{{message|An urge to take a bath overwhelms you!<br>You lost some of your gold in the fountain!|You dipped an object into a fountain and lost some of your gold; the second line does not occur if you had no gold in open inventory.}}
{{message|The exchequer accepts your contribution.|You looted a throne while confused and carrying gold, generating a throne room monster and placing some or all of your gold in its inventory.}}
{{message|Thank you for your contribution to reduce the debt.|You looted a throne while confused and carrying gold, but a chest was on the level; the gold is placed in there instead of generating a monster.}}<br><br>

{{message|Your purse feels lighter.|A leprechaun hit you and stole some or all of the gold in your open inventory.}} 
{{message|Your purse feels heavier.|You stole some gold from a monster while polymorphed into a leprechaun.}}

==Variants==
In many variants that use [[object materials]], leprechauns will also attempt to steal any items made of [[Gold (material)|gold]] in your open inventory rather than just your money.

===UnNetHack===
In [[UnNetHack]], using {{kbd|$}} to check your gold also tells you how much gold you have stashed away in containers within your inventory.
{{nethack-366}}
[[Category:Your character]]}
&&%s&& %s Food poison {64344 2011-01-31T14:53:04Z {630 Paxed} fix double redirect #REDIRECT [[Sickness#Food_poisoning]]}
&&%s&& %s You feel shuddering vibrations {40590 2009-06-20T02:45:55Z {102 Bitplane}  #redirect [[System shock]]
[[Category:Messages]]}
&&%s&& %s Price-ID {22356 2007-09-10T01:26:09Z {0 } Redirecting to [[Price identification]] #REDIRECT [[Price identification]]}
&&%s&& %s Camera {22363 2007-09-10T22:02:12Z {0 } Redirected #REDIRECT [[Expensive_camera]]}
&&%s&& %s Wizard of yendor {22376 2007-09-11T13:34:19Z {0 } redir to WoY #REDIRECT [[Wizard of Yendor]]}
&&%s&& %s Gate {140616 2021-06-02T18:46:55Z {4001279 Umbire the Phantom}  In ''[[NetHack]]'', '''gating''' can refer to any of the following:

* A [[demon]] [[Demon#Demons summoning demons|summoning other demons]]. 
* A [[drawbridge]].
* [[Branchport]]ing.

{{disambig}}}
&&%s&& %s Drop {128946 2019-11-01T17:12:03Z {4001343 Towardsdawn2} /* Dropping part of a stack */ How to drop items in Windows {{Keyboard Commands}}
To '''drop''' something is to remove it from your inventory and place it on the ground under you.  

Sometimes it is impossible to drop items due to their [[BUC]] status.

* Press {{kbd|d}} to drop an item
* Press {{kbd|D}} to drop several items

If dropping multiple items, you will be given the option to select different categories of items to drop:
:"What kinds of things do you want to drop? [!%= BUCXaium]"
:Options include:
::B - drop all objects known to be blessed.
::U - drop all objects known to be uncursed.
::C - drop all objects known to be cursed.
::X - drop all objects of unknown B/U/C status.
::a - drop all objects, without asking for confirmation.
::i - examine your inventory before dropping anything.
::u - drop only unpaid objects (when in a shop).
::m - use a menu to pick which object(s) to drop.

You may also combine the options in a single {{kbd|D}} command:
::D%u - drop only unpaid food.

Pressing {{kbd|-}} when asked what to drop produces the message, '''"You mime dropping something."'''

== Dropping part of a stack ==
Sometimes, you have a large volume of a stackable item, and it would be useful to drop part of them, while keeping others.  You can do this by combining the drop command with a number:

{{kbd|d}}{{kbd|1}}{{kbd|9}}{{kbd|$}} will drop nineteen gold Zorkmids.

In Windows, you must check the box for the item you wish to drop, then type in a number. 

This allows you to split a stack into two groups (the part on the ground and the part in your main inventory).  This is particularly useful for fragile objects, since throwing them (another way to split a stack) causes potions to break.

== Special Cases ==
* It is not possible to drop a cursed [[loadstone]] or a cursed [[weapon]] or [[weapon-tool]] that you are wielding (though other cursed wielded items may be dropped freely).
* It is not possible to drop any worn [[armor]]
* While levitating, the item is dropped from a height; if the item is [[fragile]], it may shatter.
* While walking on [[water]] or [[lava]], dropped items will sink.
* Items dropped on a down [[staircase]] may fall down, as may other items on that square. You might need to try a few times. Dropping items in this way prevents you falling down the stairs if they would burden you, and allows you to move heavy items that would make you stressed (e.g. sacrifice corpses) into lower levels.
* If you drop an item in a [[shop]], the shopkeeper will offer you gold for the item if he is interested. If you drop gold in a shop, the amount will be added to your credit.

== What to Drop ==
Dropping items is often necessary since carrying too much weight will cause the player to become [[Encumbrance|burdened]]. The player's pack only has a limited amount of space, too -- in most cases, only enough room for two different items for each letter of the alphabet. A '''[[stash]]''' is a collection of items you want to access later; see that page for detailed strategy.

* When [[encumbrance|encumbered]], look through your [[inventory]] for [[junk]] you can drop to regain full speed.
* It is also possible to run out of knapsack slots, forcing you to drop items to free up space for better items
* Drop food to feed your pets. This especially applies to [[egg]]s that would break if [[thrown]], or if you are on a [[mount]].
* Drop an item so your pet can curse test it. If your pet will not walk on an ordinary square, then one item on that square is cursed
* Drop items on an [[altar]] to learn their [[BUC]] status
* Drop a [[scroll of scare monster]] to [[scare]] all monsters in visual range
* If you suffer an [[polymorph trap|unfortunate polymorph]] you may need to drop most of your stuff before you can move

==See Also==
* ''[[death drop]]'': items that monsters drop after the player kills them,
* [[throw]]

[[Category:Commands]]
{{nethack-343}}}
&&%s&& %s Grey dragon {22430 2007-09-13T23:42:00Z {17 Addps4cat} redir [[dragon]] #REDIRECT [[Dragon]]}
&&%s&& %s Foodpois {64345 2011-01-31T14:53:21Z {630 Paxed} fix double redirect #redirect [[Sickness#Food_poisoning]]}
&&%s&& %s Xp {22473 2007-09-17T02:15:22Z {666 Qwip} redirect to Experience Points #Redirect [[Experience points]]}
&&%s&& %s Master key of thievery {22580 2007-09-25T13:58:58Z {0 } Redirecting #REDIRECT [[The Master Key of Thievery]]}
&&%s&& %s Invulnerability {142140 2021-08-21T22:20:17Z {4001313 Ardub23} Revised first paragraph to be more straightforward; placed SLASH'EM info in separate section per [[NHW:Style guide#Variants]] '''Invulnerability''' is a condition temporarily granted to the [[player]] while they make a successful [[prayer]] to their own god. Prayer requires three turns,{{refsrc|pray.c|1582}} and invulnerability is in effect until the prayer ends. Invulnerability protects the player from most harmful effects, but [[poison cloud]]s and [[mind flayer]]s' psychic blasts can still deal damage.

While you are invulnerable:
* Monsters pull back from making [[melee]] attacks against you, and grabbing monsters loosen their grip.{{refsrc|mhitu.c|528}}
* Swallowing attacks have no effect.{{refsrc|mhitu.c|332}}
* You are considered [[unencumbered]] for healing and [[exercise]]/abuse purposes.{{refsrc|allmain.c|154}}
* [[Teleportitis]] does not operate.{{refsrc|allmain.c|219}}
* Harassment from the [[Wizard of Yendor]] does not operate; e.g. the Wizard will not reappear.{{refsrc|allmain.c|266}}
* If trapped in [[lava]], you will not sink further.{{refsrc|allmain.c|362}}
* You do not become [[nutrition|hungrier]].<ref>{{function|eat.c|gethungry}}</ref>
* Timeouts other than for [[Luck]] do not operate; in particular, [[stoning]], [[sliming]], [[strangulation]], [[vomiting]], and [[sickness]] freeze at the point where the prayer began.{{refsrc|timeout.c|185}}

== SLASH'EM ==
In [[SLASH'EM]], drinking a [[potion of invulnerability]] grants an effect that is vastly different from the invulnerability caused by praying. This sort of invulnerability does not prevent death by any source other than hit-point loss.

== References ==

<references/>
{{nethack-343}}
[[Category:Properties]]}
&&%s&& %s Iron bars {147167 2022-08-03T15:38:28Z {4000251 Netzhack} /* Description */ {{features}}
'''Iron bars''' are a [[dungeon feature]] that appear in ''[[NetHack]]'', represented by {{cyan|#}}.

==Generation==
Randomly generated inaccessible [[closet]]s (that have a guaranteed [[scroll of teleportation]]) have a 20% chance of having iron bars where the door would be.

Iron bars also appear in the following branches and special levels:

* The [[Minetown]] variant [[Minetown#Orcish Town|Orcish Town]] will also have several iron bars blocking off entrance into the ruined town. 
* There are guaranteed iron bars in the [[Wizard quest|Wizard]], [[Tourist quest|Tourist]], and [[Ranger quest]]s. 
* The [[Big Room]] has a wall of iron bars in the middle or the map for #8, and there is a chance of iron bars being selected as the terrain for maps of #1 and #10.
* The fourth [[snake]]-filled variant of [[Medusa's Island]] has some iron bars around [[Medusa]]'s dwelling.

==Description==
Iron bars cannot be [[digging|dug]] through, and objects thrown through them have a chance of being stopped by the iron bars. Specifically, large objects such as most melee [[weapon]]s, most [[armor]] or [[boulder]]s will always be stopped - smaller objects such as [[potion]]s and most [[projectile]]s (including [[spear]]s, but not [[dagger]]s or [[boomerang]]s) will pass through with 80% chance, or 100% if the monster throwing them is next to the bars in question.{{reffunc|mthrowu.c|hit_bars}}{{refsrc|src/mthrowu.c|472|version=NetHack 3.6.6}} Spells, rays and beam attacks - such as [[dragon]] breath - will pass right through them.

All monsters that are [[whirly]], [[amorphous]], [[phasing]], [[tiny]], or else medium-sized (or smaller) and [[slithy]] can pass through them, including you if you have any of these properties or [[polymorph]] into a monster that does).{{reffunc|mondata.c|passes_bars}} Monsters with rusting or corrosive attacks, such as [[rust monster]]s and [[gray ooze]]s, can also eat through the bars.

[[Acid]] can be used to dissolve iron bars: a [[potion of acid]] smashed onto them by using {{kbd|F}} while [[wield]]ing it, or thrown at them – as noted above, a thrown potion potion only has a 20% chance of hitting the bars.{{refsrc|src/hack.c|1632|version=NetHack 3.6.6}}{{refsrc|src/mthrowu.c|1136|version=NetHack 3.6.6}} The acidic breath of a [[yellow dragon]] will dissolve the bars as well.{{refsrc|src/zap.c|4567|version=NetHack 3.6.6}} Bars that are marked "[[non-diggable]]" cannot be dissolved by any of these methods.

==Strategy==
Iron bars do not impede visibility, allowing spellcasting or wand-using players and monsters to direct their beams, rays and gazes through them. In particular, this can be used to pick off Orcish Town's invaders without as much immediately risk to yourself - but beware of the [[poison]]ed [[arrow]]s that many of them can fire back at you, especially if you lack [[poison resistance]].

The iron bars on the fourth variant of Medusa's Island present a significant hazard, however - you may inadvertently catch a glimpse of Medusa through the bars as you approach her, depending on where she is first generated, and risk being immediately [[petrified]]. Wearing a [[blindfold]] or [[towel]] before approaching may therefore be a good idea, especially if you lack [[reflection]].

==History==
Iron bars first appear in [[NetHack 3.1.0]], when the [[Quest]] was introduced to the game.

In version [[3.4.0]], a potential bug occurred with whirly and/or amorphous [[engulfing|engulfers]] passing through iron bars while [[engulfing]] a monster that cannot.

[[NetHack 3.6.0]] was the first version in which iron bars can randomly generate through the previously discussed method, and the first in which monsters could eat through them; dissolving iron bars with acid was added in [[3.6.1]].

{{todo|Is the 3.4 bug still valid for 3.6.0?}}

==Variants==
===SLASH'EM===
In [[SLASH'EM]], iron bars may be found in some of the new levels of [[Sokoban]], and also appear in [[Grund's Stronghold]]. Some maze levels within the dungeon may be partially comprised of iron bars, e.g. in [[Gehennom]]; these can prove especially annoying during the [[ascension run]].

In addition to the applicable methods described above, player [[Doppelganger (starting race)|Doppleganger]]s can use the [[liquid leap]] technique to pass through them. This can even be used on the iron bars in Sokoban, which otherwise prevents creatures from passing through them.

===UnNetHack===
In [[UnNetHack]], as in SLASH'EM above, iron bars appear in some of the new levels of [[Sokoban]] (a few of which are from SLASH'EM) and in Gehennom mazes. They also appear much more frequently within the main dungeon, often replacing doorways and sections of rock wall within room-and-corridor levels.

A ring of iron bars is created around the [[magic portal]] connecting the [[Black Market]] to the main dungeon if you attempt to steal anything from their shops.

Iron bars may be eaten by [[metallivore]]s, and may also dissolved by acid breath from dragons (with a 20% chance)or a potion of acid.{{refsrc|src/zap.c|3915|unnethack=1499}} {{refsrc|src/mthrowu.c|856|unnethack=1499}}{{refsrc|src/hack.c|731|unnethack=1499}}{{refsrc|src/monmove.c|1307|unnethack=1499}} 

===SporkHack===
In [[SporkHack]], iron bars are sometimes generated as part of room-and-corridor dungeon levels.

===dNetHack===
In [[dNetHack]], iron bars can be broken with a [[wand of striking]].

==References==
<references/>
{{nethack-366}}
[[Category:Dungeon features]]}
&&%s&& %s Devil {136970 2021-01-10T18:05:45Z {4001476 Infinigon}  A '''devil''' is a sort of [[demon]]. The following demons have "devil" in their name:

* {{monsymlink|barbed devil}}
* {{monsymlink|bone devil}}
* {{monsymlink|horned devil}}
* {{monsymlink|ice devil}}

== SLASH'EM ==
In ''[[SLASH'EM]]'', the term '''devil''' also refers to the unique monsters who have lairs in Gehennom ''below'' the Wizard's Tower; they are:

* {{monsymlink|Asmodeus}}
* {{monsymlink|Baalzebub}}
* {{monsymlink|Dispater}}
* {{monsymlink|Geryon}}

{{disambig}}
{{nethack-366}}}
&&%s&& %s Photography patch {85270 2013-05-26T11:32:49Z {4000045 Bulwersator} link was dead {{patch
 |author=Nephi
 |download=http://wayback.archive.org/web/20121016065027/http://www.users.muohio.edu/matteona/zindorsky/patches/photo.zip
 |bilious=60
}}
The '''photography patch''' allows you to use the [[expensive camera]] to take a [[photograph]] of something in the dungeon. You may store photographs in a [[photo album]]. For instructions and examples, read the [http://web.archive.org/web/20080828141159/http://zindorsky.kundor.org/patches/photo-desc.html photography patch's home page].

The [[biodiversity patch]] includes this patch.

{{stub}}

[[Category:Patches]]}
&&%s&& %s Heck² patch {127221 2019-08-24T04:48:37Z {4001313 Ardub23}  {{patch
 |author=Kelly Bailey
 |download=http://www.multifoliate.com/nh/heck2/diff.txt
 |bilious=78
}}
The '''Heck² patch''' provides a collection of special levels to replace some of the maze levels in [[Gehennom]]. The new levels consist of fixed designs amid random mazes; the placement of levels into the dungeon is random. The patch is against [[NetHack 3.4.2]] but also works with 3.4.3. The patch has [http://www.multifoliate.com/nh/ a home page].

The patch makes extensive use of the [[des-file format]], often ordering multiple MAP and MAZEWALK commands to produce the new levels.

There are five groups of Heck² levels: heck-a, heck-b, heck-c, heck-d, heck-e. Each game has a 25% chance of a heck-a level, a 50% chance of a heck-b level, a 75% chance of a heck-c level, a 100% chance of a single heck-d level, and four of the heck-e levels.

The heck-a levels include:
# [[Demogorgon]] escorted by two [[shrieker]]s
# [[Dispater]] escorted by [[green slime]]s and [[disenchanter]]s
# [[mind flayer]]s and [[master mind flayer]]s
# [[Geryon]] escorted by [[doppelganger]]s and [[werewolf|werewolves]]
# [[iron bars]] and [[iron golem]]s
# [[lich]]es
# [[Yeenoghu]] escorted by [[minotaur]]s

The heck-b levels include:
# a cross-shaped level
# a room with many [[troll]]s
# a stream of lava with [[red dragon]]s
# a maze of lava
# a dark, open region
# a small pool with [[kraken]]
# parallel, vertical corridors
# hidden [[closet]]s

The heck-c, heck-d, and heck-e levels are less exceptional, but they insert open areas into the maze and sometimes unusual features like pillars or rounded rooms; they also insert solid wall, sometimes reshaping a level like 'm' or 'w'.

The [[biodiversity patch]] incorporates the Heck² patch.
[[UnNetHack]] applies a modified version of the patch&mdash;some levels have been added to the mix, the numbers have been tweaked, and some of the least popular levels were removed.

[[Category:Patches]]}
&&%s&& %s Wolfsbane {22814 2007-10-15T23:39:35Z {0 } Redirecting to [[Sprig of wolfsbane]] #REDIRECT [[Sprig of wolfsbane]]}
&&%s&& %s Grey ooze {22815 2007-10-16T02:53:50Z {0 } Britons are people too #REDIRECT [[Gray ooze]]}
&&%s&& %s Landmine {22820 2007-10-16T22:31:26Z {0 } Redirecting to [[Land mine]] #REDIRECT [[Land mine]]}
&&%s&& %s Nutrition/Weight {129217 2019-11-19T01:48:15Z {4000227 Kufat} Update for 3.6.1-2. Here is a list of [[food]] organized by its '''nutrition/weight ratio'''. The idea is that, all other considerations being equal (such as other uses for food besides nutrition, etc.), it makes most sense to eat foods with a lower ratio first and hang on to food that gives a higher ratio to maximize weight efficiency.

''V indicates [[Conduct#Vegetarian|vegetarian]] food''<br />
''! indicates [[Conduct#Vegan|vegan]] food''

{|class="prettytable sortable striped"
![[Food]]
![[Gold|Cost]]
![[Weight|Weight]]
![[Random number generator|Probability]]
![[Nutrition]]
!Nutrition/weight
![[Time|Turns to eat]]
![[Conduct]]
|-
|[[lembas wafer]]
|45
|5
|20
|800
|160
|2
|!
|-
|[[lump of royal jelly]]
|15
|2
|0
|200
|100
|1
|V
|-
|[[pancake]]
|15
|2
|25
|200
|100
|2
|V
|-
|[[egg]]
|9
|1
|85
|80
|80
|1
|V
|-
|blessed [[tin of spinach]]
|5
|10
|0.625
|600
|60
|1-2
|!
|-
|[[slime mold]] (user defined fruit)
|17
|5
|75
|250
|50
|1
|!
|-
|[[candy bar]]
|10
|2
|13
|100
|50
|1
|V
|-
|uncursed [[tin of spinach]]
|5
|10
|11.25
|401-600
|40.1-60
|varies
|!
|-
|[[food ration]] (gunyoki)
|45
|20
|380
|800
|40
|5
|!
|-
|[[cram ration]]
|35
|15
|20
|600
|40
|3
|!
|-
|[[K-ration]]
|25
|10
|0
|400
|40
|1
|!
|-
|[[banana]]
|9
|2
|10
|80
|40
