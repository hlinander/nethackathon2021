* [[NetHack 1.3d/mklev.c]]
* [[NetHack 1.3d/mkmaze.c]]
* [[NetHack 1.3d/mkobj.c]]
* [[NetHack 1.3d/mkshop.c]]
* [[NetHack 1.3d/mon.c]]
* [[NetHack 1.3d/monmove.c]]
* [[NetHack 1.3d/monst.c]]
* [[NetHack 1.3d/msdos.c]]
* [[NetHack 1.3d/objnam.c]]
* [[NetHack 1.3d/o_init.c]]
* [[NetHack 1.3d/options.c]]
* [[NetHack 1.3d/pager.c]]
* [[NetHack 1.3d/pcmain.c]]
* [[NetHack 1.3d/pctty.c]]
* [[NetHack 1.3d/pcunix.c]]
* [[NetHack 1.3d/polyself.c]]
* [[NetHack 1.3d/potion.c]]
* [[NetHack 1.3d/pray.c]]
* [[NetHack 1.3d/pri.c]]
* [[NetHack 1.3d/prisym.c]]
* [[NetHack 1.3d/read.c]]
* [[NetHack 1.3d/rip.c]]
* [[NetHack 1.3d/rnd.c]]
* [[NetHack 1.3d/rumors.c]]
* [[NetHack 1.3d/save.c]]
* [[NetHack 1.3d/search.c]]
* [[NetHack 1.3d/shk.c]]
* [[NetHack 1.3d/shknam.c]]
* [[NetHack 1.3d/sit.c]]
* [[NetHack 1.3d/spell.c]]
* [[NetHack 1.3d/steal.c]]
* [[NetHack 1.3d/termcap.c]]
* [[NetHack 1.3d/timeout.c]]
* [[NetHack 1.3d/topl.c]]
* [[NetHack 1.3d/topten.c]]
* [[NetHack 1.3d/track.c]]
* [[NetHack 1.3d/trap.c]]
* [[NetHack 1.3d/u_init.c]]
* [[NetHack 1.3d/unixmain.c]]
* [[NetHack 1.3d/unixtty.c]]
* [[NetHack 1.3d/unixunix.c]]
* [[NetHack 1.3d/vault.c]]
* [[NetHack 1.3d/version.c]]
* [[NetHack 1.3d/wield.c]]
* [[NetHack 1.3d/wizard.c]]
* [[NetHack 1.3d/worm.c]]
* [[NetHack 1.3d/worn.c]]
* [[NetHack 1.3d/write.c]]
* [[NetHack 1.3d/zap.c]]
|}

==Other files==

* [[NetHack 1.3d/rumors.base]]
* [[NetHack 1.3d/rumors.kaa]]
* [[NetHack 1.3d/rumors.mrx]]
[[Category:NetHack 1.3d source code| ]]}
&&%s&& %s Category:NetHack 1.3d source code {9193 2006-08-31T15:05:42Z {396 Jayt} created category, in [[category:source code]] This category contains articles containing the source code to [[NetHack 1.3d]].

[[Category:Source code]]}
&&%s&& %s NetHack 1.4f source code {12587 2006-09-28T13:22:50Z {396 Jayt} source code infobox {{NetHack source code}}
This page contains links to the '''source code''' of [[NetHack 1.4f]]. This is an old release; for the latest release, see [[Source code]].

This set of files is from the distribution found [http://www.juiblex.co.uk/nethack/source/nethack-1.4f.tar.gz here].

{|style="width: 100%;"
|style="width: 50%; vertical-align: top;"|
=== Header files ===
* [[NetHack 1.4f/config.h]]
* [[NetHack 1.4f/date.h]]
* [[NetHack 1.4f/edog.h]]
* [[NetHack 1.4f/eshk.h]]
* [[NetHack 1.4f/extern.h]]
* [[NetHack 1.4f/flag.h]]
* [[NetHack 1.4f/func_tab.h]]
* [[NetHack 1.4f/gen.h]]
* [[NetHack 1.4f/gold.h]]
* [[NetHack 1.4f/hack.h]]
* [[NetHack 1.4f/mfndpos.h]]
* [[NetHack 1.4f/mkroom.h]]
* [[NetHack 1.4f/monst.h]]
* [[NetHack 1.4f/msdos.h]]
* [[NetHack 1.4f/objclass.h]]
* [[NetHack 1.4f/objects.h]]
* [[NetHack 1.4f/obj.h]]
* [[NetHack 1.4f/permonst.h]]
* [[NetHack 1.4f/rm.h]]
* [[NetHack 1.4f/spell.h]]
* [[NetHack 1.4f/trap.h]]
* [[NetHack 1.4f/wseg.h]]
* [[NetHack 1.4f/you.h]]
|style="width: 50%; vertical-align: top;"|
=== Source files ===
* [[NetHack 1.4f/alloc.c]]
* [[NetHack 1.4f/apply.c]]
* [[NetHack 1.4f/bones.c]]
* [[NetHack 1.4f/cmd.c]]
* [[NetHack 1.4f/decl.c]]
* [[NetHack 1.4f/do.c]]
* [[NetHack 1.4f/dog.c]]
* [[NetHack 1.4f/dogmove.c]]
* [[NetHack 1.4f/do_name.c]]
* [[NetHack 1.4f/dothrow.c]]
* [[NetHack 1.4f/do_wear.c]]
* [[NetHack 1.4f/eat.c]]
* [[NetHack 1.4f/end.c]]
* [[NetHack 1.4f/engrave.c]]
* [[NetHack 1.4f/fight.c]]
* [[NetHack 1.4f/fountain.c]]
* [[NetHack 1.4f/hack.c]]
* [[NetHack 1.4f/invent.c]]
* [[NetHack 1.4f/ioctl.c]]
* [[NetHack 1.4f/lev.c]]
* [[NetHack 1.4f/makedefs.c]]
* [[NetHack 1.4f/makemon.c]]
* [[NetHack 1.4f/mhitu.c]]
* [[NetHack 1.4f/mklev.c]]
* [[NetHack 1.4f/mkmaze.c]]
* [[NetHack 1.4f/mkobj.c]]
* [[NetHack 1.4f/mkshop.c]]
* [[NetHack 1.4f/mon.c]]
* [[NetHack 1.4f/monmove.c]]
* [[NetHack 1.4f/monst.c]]
* [[NetHack 1.4f/msdos.c]]
* [[NetHack 1.4f/objnam.c]]
* [[NetHack 1.4f/o_init.c]]
* [[NetHack 1.4f/options.c]]
* [[NetHack 1.4f/pager.c]]
* [[NetHack 1.4f/pcmain.c]]
* [[NetHack 1.4f/pctty.c]]
* [[NetHack 1.4f/pcunix.c]]
* [[NetHack 1.4f/polyself.c]]
* [[NetHack 1.4f/potion.c]]
* [[NetHack 1.4f/pray.c]]
* [[NetHack 1.4f/pri.c]]
* [[NetHack 1.4f/prisym.c]]
* [[NetHack 1.4f/read.c]]
* [[NetHack 1.4f/rip.c]]
* [[NetHack 1.4f/rnd.c]]
* [[NetHack 1.4f/rumors.c]]
* [[NetHack 1.4f/save.c]]
* [[NetHack 1.4f/search.c]]
* [[NetHack 1.4f/shk.c]]
* [[NetHack 1.4f/shknam.c]]
* [[NetHack 1.4f/sit.c]]
* [[NetHack 1.4f/spell.c]]
* [[NetHack 1.4f/steal.c]]
* [[NetHack 1.4f/termcap.c]]
* [[NetHack 1.4f/timeout.c]]
* [[NetHack 1.4f/topl.c]]
* [[NetHack 1.4f/topten.c]]
* [[NetHack 1.4f/track.c]]
* [[NetHack 1.4f/trap.c]]
* [[NetHack 1.4f/u_init.c]]
* [[NetHack 1.4f/unixmain.c]]
* [[NetHack 1.4f/unixtty.c]]
* [[NetHack 1.4f/unixunix.c]]
* [[NetHack 1.4f/vault.c]]
* [[NetHack 1.4f/version.c]]
* [[NetHack 1.4f/wield.c]]
* [[NetHack 1.4f/wizard.c]]
* [[NetHack 1.4f/worm.c]]
* [[NetHack 1.4f/worn.c]]
* [[NetHack 1.4f/write.c]]
* [[NetHack 1.4f/zap.c]]
|}

==Other files==

* [[NetHack 1.4f/rumors.base]]
* [[NetHack 1.4f/rumors.kaa]]
* [[NetHack 1.4f/rumors.mrx]]
[[Category:NetHack 1.4f source code| ]]}
&&%s&& %s Category:NetHack 1.4f source code {9216 2006-08-31T15:24:32Z {396 Jayt} created category, in [[category:source code]] This category contains articles containing the source code to [[NetHack 1.4f]].

[[Category:Source code]]}
&&%s&& %s Shock resistant {9297 2006-08-31T16:08:55Z {396 Jayt} Redirecting to [[Shock resistance]] #REDIRECT [[shock resistance]]}
&&%s&& %s Melee {141108 2021-06-23T04:19:17Z {4001463 Actual-nh} Whoops re pounding A '''melee''' (also '''mêlée''') attack is a close proximity hand-to-hand attack, as distinguished from a ranged attack. Moving into a [[monster]] initiates a melee attack against it, either with a [[wield]]ed [[weapon]] (or other item), or your [[bare hands]], if you don't wield anything. You can use the {{kbd|Shift}}-{{kbd|F}} command to force your next input to be interpreted as a melee attack. ([[Pounding]] is not considered a melee attack.)

You are only vulnerable to a monster's melee attack if you are adjacent to it. Almost all special attacks count as melee (e.g. stealing or cursing items, but not summoning monsters).

See the [[ranged attack]] page for strategy about when you may want to use ranged attacks instead of melee, sometimes even when you are in melee range.

{{stub}}
[[Category:Actions]]
[[Category:Monster attacks]]}
&&%s&& %s Melee combat {9300 2006-08-31T16:14:56Z {396 Jayt} Redirecting to [[Melee]] #REDIRECT [[Melee]]}
&&%s&& %s Mêlée {9301 2006-08-31T16:15:21Z {396 Jayt} Redirecting to [[Melee]] #REDIRECT [[Melee]]}
&&%s&& %s Category:Defunct features {9315 2006-08-31T16:59:24Z {239 Eidolos} Create category stub; [[Category:History]]. This category contains articles about [[defunct features|features]] which used to be in NetHack but have since been removed.

[[Category:History]]}
&&%s&& %s Multiplication {9329 2006-08-31T20:33:48Z {325 GreyKnight} :-D #REDIRECT [[Division]]}
&&%s&& %s Category:SLASH'EM monsters {74095 2011-10-10T17:31:46Z {0 } cat This category contains articles about [[monsters]] found only in [[SLASH'EM]].
[[Category:SLASH'EM|M]]
[[Category:Monsters]]}
&&%s&& %s Category:SLASH'EM {9343 2006-08-31T22:56:59Z {396 Jayt} created category, in [[category:variants]] This category contains [[SLASH'EM]] specific articles that may not have anything to do with vanilla [[NetHack]].

[[Category:Variants]]}
&&%s&& %s NetHackWiki:Old news {38110 2009-02-25T08:30:37Z {924 ZeroOne} Redirecting to [[Template:News#Old news]] #REDIRECT [[Template:News#Old news]]}
&&%s&& %s Category:Variants {76623 2012-03-09T04:51:34Z {4000236 Tungtn} Cross-link to [[variant]] page This category contains articles and subcategories about [[variant]]s of [[vanilla]] [[NetHack]].

[[Category:Roguelikes]]}
&&%s&& %s Category:SLASH'EM roles {24296 2008-01-10T17:22:02Z {458 Kernigh} Add this to [[category:roles]] too (helps find vanilla roles that also exist in s'em). This category contains articles about [[role]]s unique to [[SLASH'EM]].

[[Category:SLASH'EM|R]] [[Category:Roles]]}
&&%s&& %s Curse removal {144142 2022-01-13T23:38:00Z {4001279 Umbire the Phantom}  One very common problem in NetHack is being stuck to a [[cursed]] item.  Cursed weapons weld themselves to your hand, cursed armor and jewelery cannot be removed, and cursed [[loadstone]]s cannot be dropped.  You can reduce your chances of being stuck with something cursed [[Curse-testing|by testing everything]] with your [[pet]] or an [[altar]], but because some monsters can curse your items, it is likely that even careful players will end up with cursed items at some point.

This page aims to list all possible ways to free yourself from a cursed item. Three general approaches, in order of preference for valuable items, are to uncurse the item, to get unstuck from it, or to simply destroy it.

==Removing the curse==
# Read a non-cursed [[scroll of remove curse]], unless you are confused.  An uncursed scroll will uncurse [[loadstone]]s and anything worn or wielded - even if what you're wielding isn't a weapon!  A blessed scroll will uncurse everything in your main inventory.  
# Cast a [[spellbook of remove curse|spell of remove curse]]. If you're at least skilled in clerical spells, it will work like a blessed scroll. Otherwise, it will work like an uncursed scroll. You can't cast remove curse with both hands welded to a cursed [[two-handed]] weapon, and probably not while wearing a [[dunce cap]].
# [[enchanting|Enchant]] it. (This does not work for chargeable rings.)
# Dip the cursed item into a [[potion of holy water]].
# Dip the cursed item into a [[fountain]] for a 2/15 chance. Be aware that this will [[wet]] the item and may summon a [[water demon]] or water [[nymph]]. If a [[long sword]] is converted to [[Excalibur]] by [[dip]]ping, it is automatically uncursed.
# [[Pray]]. Your deity treats cursed [[blindfold]]s, [[towel]]s, levitation items, [[two-handed]] weapons, and wearing both cursed weapon and cursed shield, as a major problem.  Wearing any [[amulet of strangulation]] is also treated as a major problem, but you probably want to pray only if the amulet is cursed, otherwise you can just remove it. Other cursed wielded or worn items (plus loadstones and luckstones) are treated as a minor problem.  If succesful, the cursed item will be uncursed, except for the amulet of strangulation, which will be destroyed. If both weapon and shield are cursed, only the weapon will be uncursed. There is also a chance that you will be "surrounded by a light blue aura" and have everything in your inventory uncursed, if you pray with sufficient [[luck]].
# Wield it, and step on a [[magic trap]]. There is a 1/20 chance of this acting like an uncursed scroll of remove curse. Be careful, because the most common effect of a magic trap is to blind you and summon monsters. Don't deliberately wield cursed weapons.
# Zap a wand or spell of [[cancellation]] at the object. Use {{kbd|.}} to zap cancellation at yourself — drop everything you don't want cancelled before doing this. This will also set the item's [[enchantment]] to zero.

==Removing the item==
# Drop everything else and let a [[nymph]] steal the cursed item. You can then hunt her down to retrieve it, if desired.
# If the cursed object is armor, let an [[foocubus|incubus or succubus]] remove it.
# If the cursed object is causing you to levitate, float over a [[sink]]. You will crash to the floor, and the item will be removed, although it will remain cursed.
# [[Loadstone]]s only: drop everything but the loadstone, a [[wand of digging]] and your armor, enter a shop, pick up something in the shop, and dig through the floor. The [[shopkeeper]] will "grab your backpack", i.e. take your inventory, including the loadstone but except worn or wielded items.
# If the cursed object is armor or a weapon, [[polymorph]] into something that can't wear armor or wield weapons. If dealing with body armor specifically and you have a choice in the matter, go for a small monster so that the armor isn't destroyed; if you've got [[lycanthropy]], changing into animal form also works: werewolves will destroy body armor they are wearing, while werejackals and wererats will shrink out of it.
# If the cursed object is armor, dip it in a [[potion of polymorph]]. It will either shudder or be removed. {{refsrc|zap.c|1365|comment=worn armor is removed when polymorphed}} A comment in the source hints this may change in future versions ("for now, take off worn items being polymorphed"{{refsrc|zap.c|1362}}).

==Destroying the item==
# If the cursed object is armor that you don't mind losing, take off all other armor and read a noncursed [[scroll of destroy armor]].
# High-level spellcasting monsters can [[destroy armor (monster spell)|destroy armor]] which works if you're not magic resistant, in the order cloak, suit, shirt, helmet, gloves, boots, shield, but watch out for their other spells such as [[touch of death]], or indeed, [[curse items]], which will end up making you go backwards.
# Disintegrating breath (from a black [[dragon]]) can destroy some armors.
# If the cursed object is a metal or wooden ring{{refsrc|eat.c|1904}} and you don't mind gaining its intrinsic: [[Polymorph]] into a form that can, and [[eat]] it.
# [[Stone to flesh]] will convert a [[loadstone]] or some cursed rings to food. Drop all other gemmed rings, marble wands or gems beforehand to prevent them from being affected.
# If the cursed object is a [[ring]], [[shock]] may cause it to explode, but may also explode useful rings and wands.
# Overenchant and vaporize it. You can also underenchant and vaporize items with cursed scrolls of enchant foo, if the enchantment is negative enough.
# Similarly, you can overcharge a chargeable ring until it explodes. This is probably a waste of [[scroll of charging|scrolls of charging]]. (In SLASH'EM you can also pay a shopkeeper to do this.)
# A [[boomerang]] welded to your hand may be destroyed as you bash monsters with it in melee. 
# Dip the cursed item into a [[potion of polymorph]]. The item will transform into a new item of the same class, still cursed. Armor and jewelery will be no longer worn, and loadstones will become droppable, but weapons will still be welded to your hand.

==SLASH'EM==
In SLASH'EM, you can pay a [[shopkeeper]] to uncurse an item. 

The [[castle]] moat is [[Lethe]] water. In addition to all its other effects, it will uncurse anything dipped into it. See the SLASH'EM section in [[castle]] for more details.

==dNetHack==

# dNetHack also incorporates shopkeeper services.
# The Lethe is found in the Lost Cities branch, rather than around the castle.
# An [[effigy]] can be used.

==See also==
* [[Curse-testing]]
* [[Remove curse]]

==References==
<references/>

{{featured}}
[[Category:Strategy]]
{{nethack-343|offset=1}}}
&&%s&& %s Enchanting {9374 2006-09-01T16:13:49Z {924 ZeroOne} ring of protection '''Enchanting''' may refer to the use of either of the following items:
*'''[[scroll of enchant weapon]]'''
*'''[[scroll of enchant armor]]'''

In addition, some [[ring]]s, such as the [[ring of protection]], may be boosted up, but that is called ''charging'' and is done using the [[scroll of charging]].

{{disambig}}}
&&%s&& %s Rumors {125715 2019-04-10T16:07:23Z {4000251 Netzhack} /* Getting rumors */ Trimmed a pointless "respectively" (1-to-1 relation irrelevant here). '''Rumors''' are a way to learn about the game without reading [[spoiler]]s. Rumors come in two forms: true and false. The true ones are useful hints, while the false ones are useless or incorrect.

==Getting rumors==
* The [[Oracle]] always tells you a true rumor when you pay for a minor consultation.
* The following items give you a true rumor if blessed, a false rumor if cursed and either if uncursed:
** [[Fortune cookie]]s contain a rumor that is revealed when you eat the cookie. You may also just [[read]] the cookie, if you want to keep the vegan [[conduct]].
** The [[quest artifact|quest artifacts]] of the [[knight]] and [[rogue]] roles, [[The Magic Mirror of Merlin]] and [[The Master Key of Thievery]], give a rumor when applied or wielded.
* You can sometimes find rumors in the dust on the [[dungeon]] [[floor]]. Sometimes these can be difficult to read.
** You can write something on the dungeon floor, then engrave with a [[wand of polymorph]] to get a rumor.

==Examples==
===True rumors===
:Rumor #330: ''Throwing food at a wild dog might tame him.''
This encourages the player to throw [[tripe]] at dogs to tame them.

:Rumor #47: ''Eating a freezing sphere is like eating a yeti.''
This suggests that by eating a [[freezing sphere]] or a [[yeti]] you may get the [[cold resistance]]. Unfortunately, freezing spheres never leave corpses.

:Rumor #326: ''They say the gods get angry if you kill your dog.''
This suggests that if you kill a [[pet]], you get an [[alignment record]] penalty (-15 to be exact, and also lose 1 point of [[Luck]]).

===False rumors===
:Rumor #7: ''A cockatrice corpse is guaranteed to be untainted!''
This encourages the player to eat a [[cockatrice]] corpse, which is usually a [[stoning | fatal mistake]].

:Rumor #157: ''Sorry, no fortune this time.  Better luck next cookie!''
This is just plain useless.

:Rumor #195: ''They say that a hacker named David once slew a giant with a sling and a rock.''
Some false rumours are just random references to random things.

==See also==
*[[Source:rumors.tru]] — the data file that contains all the true rumors
*[[Source:rumors.fal]] — the data file that contains all the false rumors
*[[Rumor messages]] — explains the meaning of each rumor

==External links==
*[http://alt.org/nethack/addmsgs/ alt.org - NetHack Addi(c)tion: Random Messages]

[[Category:Messages|*]]
{{nethack-343}}}
&&%s&& %s Rumor {9380 2006-09-01T16:36:18Z {924 ZeroOne} [[Rumor]] moved to [[Rumors]]: This is more of a plural subject #REDIRECT [[Rumors]]}
&&%s&& %s Rumour {9381 2006-09-01T16:37:01Z {924 ZeroOne} #REDIRECT [[Rumors]] #REDIRECT [[Rumors]]}
&&%s&& %s Rumours {9382 2006-09-01T16:37:22Z {924 ZeroOne} #REDIRECT [[Rumors]] #REDIRECT [[Rumors]]}
&&%s&& %s Link {9667 2006-09-03T17:35:47Z {458 Kernigh} #REDIRECT [[Websites]] #REDIRECT [[Websites]]}
&&%s&& %s Category:Featured articles {70694 2011-05-29T21:22:07Z {0 } move category as per [[NetHackWiki:Categories]] This category is for articles that have been [[NetHackWiki:Featured articles|featured]] on the front page.
[[Category:NetHackWiki]]}
&&%s&& %s Mysterious force {148164 2022-09-15T15:19:19Z {4000251 Netzhack} /* History */ Tense, word order In ''[[NetHack]]'', the '''mysterious force''' is a feature that occurs in various places:

* [[Non-teleport level]]s will print the message "A mysterious force prevents <foo> from teleporting!" any time [[you]] or a [[monster]] attempts to teleport on that level.<ref>{{function|teleport.c|tele}}</ref>
* Another "mysterious force" prevents you from descending the [[staircase]] on the [[quest home]] level without first getting permission from your [[quest leader]].{{refsrc|do.c|1018}}
* While digging with a [[blessed]] [[pick-axe]] on the [[Plane of Earth]], a "mysterious force" may create a cave around you.<ref>{{function|dig.c|mkcavearea}}</ref>
* If you are being escorted out of a [[vault]] and drop the gold on a square where the vault's walls used to be, a "mysterious force" will move it back into the vault when the walls are magically repaired.<ref>{{function|vault.c|wallify_vault}}</ref>

This article describes the most relevant instance of the mysterious force for most players: a random [[level teleport]]ation effect that occurs while carrying the [[Amulet of Yendor]] in [[Gehennom]]. It is mostly known as the much-maligned primary obstacle that you face during the [[ascension run]].

==Description==
When trying to climb up [[stairs]] or [[quaff]]ing a [[cursed]] [[potion of gain level]] in Gehennom with the Amulet of Yendor in your possession, the mysterious force will activate {{frac|4}} of the time and impede your progress.{{refsrc|do.c|979}} The mysterious force does not act when you go up from any of the four bottom levels of Gehennom, when you go up from the [[Valley of the Dead]] to the [[Castle]], or when you enter [[Vlad's tower]] using the staircase. If you are inside the [[Wizard's Tower]], it will leave you on the same level if it would otherwise place you below the bottom of the tower.

The mysterious force will often push you back by at least one floor; it can also teleport you around the same level as a kind of "zero level drop". You may also be sent back more than one floor depending on your [[alignment]]: [[Lawful]] characters are dumped up to three levels below their current location, while [[neutral]] players are dropped up to two floors below, and [[chaotic]] characters are the most fortunate, with a maximum of one level down.

Monsters, especially the [[Wizard of Yendor]], may also be affected by the force when they try to flee upstairs with the Amulet. Unlike the player, monsters that are not already in the three lowest levels of Gehennom will always be sent exactly one level down by the force, and will be placed near the up staircase.{{refsrc|muse.c|774}} Cursed potions of gain level will also not trigger the mysterious force for monsters. These effects are summarized in the table below:

{|class="prettytable"
!Level change !! Lawful !! Neutral !! Chaotic !! Monsters
|-
| ​−1          || 75.00% || 75.00%  || 75.00%  || 75.00%
|-
| 0           || 6.25%  || 8.33%   || 12.50%  || 0
|-
| +1          || 11.45% || 12.50%  || 12.50%  || 25.00%
|-
| +2          || 5.20%  || 4.17%   || 0       || 0
|-
| +3          || 2.08%  || 0       || 0       || 0
|-
! Avg. Change || -0.470 || -0.542  || -0.625  || -0.5
|}

==Strategy==
Since [[Gehennom]] also contains many [[non-teleport level]]s, the player is advised to save a few cursed potions of gain level to bypass especially convoluted levels, such as [[Asmodeus' Lair]]. The annoyance that the mysterious force causes is enough for some to bring along or [[wish]] for a [[helm of opposite alignment]] in order to temporarily convert to chaotic alignment and avoid the worst of it, especially during [[speed ascension]]s using [[Dwarf (starting race)|dwarven]] [[Valkyrie]]s.

There is an advanced strategy to bypass a few levels in the lower sections of Gehennom by taking the portal to the [[Wizard's Tower]], which typically moves you a few levels upwards (note that the force is less harsh inside the Tower). The strategy involves [[stoning]] the Wizard of Yendor when you first encounter him to obtain the [[Book of the Dead]], which as a [[unique item]] will not be trapped within his statue - you then return to the Tower during the run to the surface, [[stone to flesh|unstone]] him and toss him the Amulet. You can then escape the level via levelporting and meet the Wizard on the upstairs, and he should teleport to you with the Amulet.

===Probabilities===
{{upcoming|NetHack 3.7.0|The force has been changed to hit you less often proportional to the total number of levels you have been sent back already. Most of the calculations on this page will be invalidated.}}
The following values are for a typical 22-level [[Gehennom]]. On average, Lawfuls take around 27% longer than Chaotics, and Neutrals take around 13% longer. Before the corrected probabilities were discovered, players used to believe that Lawfuls had a much harsher penalty when escaping Gehennom.

{|class="prettytable"
!             !! Lawful !! Neutral !! Chaotic
|-
| Average staircase climbs (approx) || 41.4 || 36.8  || 32.7
|-
| Climbs for 90% chance of escape  || 58  || 49   || 41
|}

==History==
The mysterious force first appears in [[NetHack 3.0.0]].{{refsrc|do.c|465|version=NetHack 3.0.0}}

Despite a code comment in [[NetHack 3.4.3]] implying that the probabilities of each distance other than -1 are equal, this is not actually the case - the code actually randomizes the distance to move a player twice, leading to the above distribution in the first table. The comments in later versions of NetHack have been changed to describe the formula correctly.

==Messages==
{{message|A mysterious force momentarily surrounds you...|You were affected by the mysterious force and did not move up a level.}}
{{message|As <monster> climbs the stairs, a mysterious force momentarily surrounds <him>...|A monster carrying the amulet was affected by the force and moved to the previous level.}}

==Variants==
[[SLASH'EM]], [[SporkHack]], [[UnNetHack]], [[xNetHack]], [[EvilHack]], [[SpliceHack]], and [[GruntHack]] have completely removed the mysterious force. UnNetHack, xNetHack, EvilHack, SpliceHack, and GruntHack compensate for this by making carrying the Amulet block all teleportation, including intra-level.

UnNetHack and EvilHack also include an effect that can make the Amulet of Yendor teleport itself to a random location on the current level whenever it is dropped for any reason. The odds of it teleporting away depends on its BUC status.

==References==
<references/>
{{nethack-366}}
[[Category:Strategy]]}
&&%s&& %s Alchemy {148186 2022-09-18T22:09:38Z {4001483 Cathartes} /* Simple recipes */ clarify that diluted fruit juice specifically gives less nutrition [[File:NH-Alchemy-chain-heal.svg|thumb|320px|By [[#Multiple step recipes|combining different potions]] appropriately, common potions of [[potion of speed|speed]], [[potion of healing|healing]] and [[potion of extra healing|extra healing]] can be converted to the much more useful [[potion of full healing|full healing]] and [[potion of gain ability|gain ability]].]]
In ''NetHack'', '''alchemy''' is the process of [[dip]]ping one [[potion]] into another potion to mix the two into a new uncursed, diluted potion. For those who are not spoiled, alchemy is difficult to learn - there is no in-game indication of which potions are meant to be compatible with each other. While mixing potions at random is [[#Alchemic blasts|generally dangerous and unwise]], there are a set of recipes that can be used to produce fairly consistent results.

Despite its name, the [[alchemy smock]] has no effect on alchemy.

==Description==
The <tt>[[potion.c#mixtype|mixtype]]</tt> function describes the alchemy recipes and governs which mixtures of potions produce certain results, as well as how often. Any potion made via alchemy will always be diluted, regardless of whether the input potions were; for recipes, the order of the potions involved does not matter.

The following actions do not constitute alchemy:
* Dipping any potion(s) into an uncursed [[potion of water]] will simply dilute it; dipping into blessed or cursed water will bless or curse the potion.
* Using a [[potion of polymorph]] will polymorph the other potion, breaking [[polypileless]] [[conduct]].

===Alchemic blasts===
Dipping a [[potion of acid]] or a cursed potion into any other potion, or else {{frac|10}} of the time when mixing any other potions, will result in an '''alchemic blast''': The mixture explodes, dealing d10 damage, [[abuse|abusing]] [[strength]] and generating [[vapors]] from the potion that was being.{{refsrc|potion.c|1887|version=NetHack 3.6.0}} This does not occur if you dip ''into'' a cursed potion, however.

If an alchemy attempt results in an explosion, only the number of potions actually being dipped will be used up, as opposed to the entire stack.

===Random alchemy results===
Mixing a pair of non-acidic potions that does not have a recipe (all of which are [[#List of recipes|helpfully listed below]]) will give a random result:

* Your stack may turn into [[potion of water|potions of water]]. ({{frac|8}} chance, or always if dipping a diluted potion into another potion)
* Your stack may turn into [[potion of sickness|potions of sickness]]. ({{frac|4}} chance)
* Your stack may turn into a random potion type, with the usual probabilities that apply to random potions found in the dungeon. ({{frac|8}} chance)
* All of your potions may evaporate; the one potion dipped into will also be used up. ({{frac|2}} chance)

==Stacking==
Dipping one set of [[stackable]] potions into another will alchemize multiple potions in the stack being dipped, while consuming only one potion of the one being dipped into:
* If the resulting potion (or, for random alchemy, any of the two ingredients) is [[magic item|magical]], 3&ndash;8 of dipped potions will be alchemized (but no more than the size of the stack).{{refsrc|potion.c|1963|nethack=3.6.1}}
* If the resulting potion is non-magical, or you are performing random alchemy with non-magic potions, at least 7 potions (up to the entire stack) will be alchemized.
* Dipping potions into water is not considered alchemy. If you dip a stack of potions into water, all of them will be affected.

As such, some players tend to wait until they have a stack of at least eight potions to dip before performing alchemy, to get the greatest return out of the dipped-into potion; this includes identifying their [[beatitude]] and accounting for any diluted potions. Make sure to examine your potions between each dip, to avoid accidentally turning a diluted potion into water; splitting stacks to avoid accidents is unnecessary due to how dipped stacks of potions are treated (as described above).

There are multiple methods to dilute potions: You can dip them into a [[fountain]], or simply dip them in a [[moat]] while [[flying]] or wearing [[water walking boots]]. If neither are available, you can also drop your iron items, scrolls, spellbooks, and other potions, then walk into water - make sure your [[encumbrance]] is less than Stressed and that your [[Luck]] is not too high, as this reduces the chances of potions diluting.

An [[altar]] will identify the beatitude of your potions. If following the [[atheist]] [[conduct]], you can bless the potions with [[holy water]]; seeing the glow will identify the beatitude. If nothing happens when you dip into holy water, the potions are already blessed; use unholy water to unbless them instead.

==List of recipes==
Below is a set of tables with a listed pair of ingredient potions and the result that mixing them produces; multiple recipes can yield the same result. Knowing the identity of the potions you are mixing is necessary regardless of which recipes you are attempting; it is also common to informally identify potions by using the output from these recipes.

===Simple recipes===
These recipes have the greatest likelihood of succeeding ({{frac|9|10}}, with a {{frac|1|10}} chance of explosion):

{|class="prettytable striped"
!Ingredients
!Result
|-
|
* [[potion of healing]] + [[potion of speed]] ''or''
* [[potion of healing]] + [[potion of gain level]] ''or''
* [[potion of healing]] + [[potion of gain energy]]
|[[potion of extra healing]]
|-
|
* [[potion of extra healing]] + [[potion of gain level]] ''or''
* [[potion of extra healing]] + [[potion of gain energy]]
|[[potion of full healing]]
|-
|
* [[potion of full healing]] + [[potion of gain level]] ''or''
* [[potion of full healing]] + [[potion of gain energy]]
|[[potion of gain ability]]
|-
|
* [[potion of fruit juice]] + [[potion of gain level]] ''or''
* [[potion of fruit juice]] + [[potion of gain energy]]
|[[potion of see invisible]]
|-
|
* [[potion of fruit juice]] + [[potion of enlightenment]] ''or''
* [[potion of fruit juice]] + [[potion of speed]]
|[[potion of booze]]
|-
|
: [[potion of booze]] + [[potion of enlightenment]]
|[[potion of confusion]]
|-
|
* [[potion of booze]] + [[potion of gain level]] ''or''
* [[potion of booze]] + [[potion of gain energy]]
|[[potion of hallucination]]
|-
|
: [[potion of fruit juice]] + [[potion of sickness]]
|[[potion of sickness]]
|}

Potions of extra healing and full healing are useful to have throughout the game, because quaffing them while fully healed is a common way to increase max [[hit points]]. Potions of gain ability are a good way to increase [[attribute]]s early in the game, but are of little use late in the game when most or all your attributes are already at [[Maximum attribute|maximum]].

The other recipes are usually not as useful to produce via alchemy:

* It is not usually necessary to manufacture potions of see invisible via alchemy; in addition to using gain level or gain energy potions that better serve the previously-mentioned recipes, potions of see invisible are relatively common, and a single blessed potion will convey the [[see invisible]] intrinsic permanently.

* Potions of sickness can be manufactured without using up other potions that are usually considered more valuable: Fruit juice can be made from [[amethyst]]-dipping into booze and cancelling potions of see invisible (typically once you have permanently gained the intrinsic from a blessed potion), and non-[[lawful]] players may want a stack of potions for keeping their projectiles [[Poison#Poisoning weapons|poisoned]]. However, poison resistance on monsters becomes much more common in the late game, although it still has its uses (e.g. against non-resistant [[summon nasties|nasties]] such as most of the [[dragon]]s).

* [[Foodless]] [[conduct]] players in particular can gain a lot from alchemizing diluted fruit juice into booze; both potions give the same nutrition when not diluted (dependent on their [[beatitude]]), but a diluted potion of fruit juice only gives half that nutrition.

=== Difficult recipes ===
These recipes do not always produce the same result:

{|class="prettytable striped"
!Ingredients
!Results
|-
|
* [[potion of confusion]] + [[potion of gain level]] ''or''
* [[potion of confusion]] + [[potion of gain energy]]
|
* [[potion of booze]] ({{frac|6|10}} chance)
* [[potion of enlightenment]] ({{frac|3|10}} chance)
* alchemical blast ({{frac|10}} chance)
|-
|
: [[potion of enlightenment]] + [[potion of levitation]]
|
* [[potion of gain level]] ({{frac|6|10}} chance)
* [[#Random alchemy results|random alchemy result]] ({{frac|3|10}} chance)
* alchemical blast ({{frac|10}} chance)
|}

The potion of enlightenment formula is almost never worth attempting because the probability of success is so low. Potions of gain level are much more worthwhile in comparison due to their multitude of uses, including making full healing potions, and the chance of success is higher than with enlightenment.

===Multiple-step recipes===
It is possible to use the above recipes in tandem with each other, provided you are careful about the use of diluted potions.

One example is making blessed potions of full healing and gain ability from all those healing and extra healing potions you've collected. You will need to re-stack your potions at all intermediate stages: bless stacks so all will have the same identified BUC status, and dilute concentrated potions so they will stack with the newly-alchemized ones. Follow the route:
: '''healing → extra healing → full healing → gain ability'''
Only the first step can be done using a potion of speed; the rest need gain energy or gain level (see image at the [[#content|beginning of the page]]). Leave over enough full healing, and bless all the end results.

== History ==
In [[NetHack 3.4.3]] and earlier versions, including some variants derived from these versions, alchemy always acts on the entire stack.

In [[NetHack 3.6.0]], alchemizing a stack works differently from 3.4.3 and from later versions of vanilla ''NetHack'':

* If you dip 10 or more potions, 2&ndash;9 of them will be alchemized.
* If you dip 2&ndash;9 potions into a non-magical potion, all of them will be alchemized. The following potions are nonmagic: water, oil, acid, fruit juice, booze, and potion of sickness.
* If you dip 2&ndash;9 potions into a magical potion, at least 2 will be alchemized, up to the number of potions dipped.

===Gain level recipe===
A very complicated recipe is used in 3.4.3 for making lots of potions of gain level:

[[File:NH-Alchemy-chain-water2gl.svg|thumb|center|800px|'''Stack of water → sickness → fruit juice → booze → confusion → enlightenment → gain level''']]
* Gather lots of potions, turn them into water, and dip the stack of water (blessed or uncursed) into some potion.
** This counts as [[#Random alchemy results|random alchemy]]; 25% of the time you will get [[potion of sickness|potions of sickness]]. The other times you may lose one potion of water, or get some other random result. In those cases, just dip again unless you get something good from the random result.
* [[Cancellation|Cancel]] the sickness or dip a [[unicorn horn]] to turn it into juice, then dip juice into speed for booze.
* Dip booze into enlightenment for confusion, and dip that into gain level or gain energy for a {{frac|3}} chance of enlightenment (the other {{frac|2|3}} they become booze, which moves you back a bit.
* Dip into levitation for a {{frac|2|3}} chance of gain level; the other {{frac|3}} gives a random result, and probably means you have to start the whole thing over again.

In 3.4.3, this recipe uses up an expected 23.67 potions, including all the trackbacks and alchemic explosions; to conserve resources, you can dip the water into otherwise useless [[potion of acid]], and use a unicorn horn or cancellation spell to convert sickness to juice rather than a wand of cancellation; 3.6.1 makes this recipe much less profitable. Firstly, producing sickness through random alchemy incurs a 50% chance per dip of the ''entire'' water stack disappearing, which makes it significantly more risky (and costly on average). Secondly, both confusion and enlightenment are magical potions, so making them in decent amounts under the new stacking rules is significantly harder. Assuming a large potion supply (at least 8 for each dip) and accounting both for dipped-in enlightenment and byproduct booze, each potion of enlightenment on average requires 5.1<!-- 5+10/97 --> potions of booze and 1.9<!-- 1+83/97 --> potions of gain level or gain energy to make, which actually makes using gain level counterproductive. In a more realistic scenario of limited potion supply, you have a very real possibility of using up all of your gain energy potions and ending up with fewer enlightenment potions than your initial supply.


==Variants==
===SLASH'EM===
In [[SLASH'EM]], dipping into a cursed potion will cause an explosion.

Dipping a potion of water into another potion is the same as dipping that potion into water; thus it is not possible to use potions of water in random alchemy, as it will always dilute the other potion rather than creating a random alchemic result. This can be circumvented by taking the potions of water and dipping them into the [[castle]] moat, turning them into [[Potion of amnesia|potions of amnesia]]. These potions can then be used for random alchemy, but the vapors caused by an explosion will cause you to forget spells, items and levels, unless you are polymorphed into a form that is [[eyeless]] and have [[breathless|breathlessness]] from any source, including your polymorphed form.

=== Color alchemy ===

The Color Alchemy Patch, notably incorporated in [[UnNetHack]] 3.5.2, changes the rules of alchemy to be based on artistic color mapping. It makes use of the primary colors red, blue and yellow, the secondary colors orange, green and purple, and the tertiary color brown, as well as black and white. All primary, secondary, and tertiary colors have a light and dark variant:
{| class="prettytable striped"
!Color !! Light !! Dark
|-
|Red || pink potion || ruby potion
|-
|Blue || sky blue potion || indigo potion
|-
|Yellow || yellow potion || golden potion
|-
|Orange || orange potion || amber potion
|-
|Green || emerald potion || dark green potion
|-
|Purple || puce potion || magenta potion
|-
|Brown || ochre potion || brown potion
|}

Mixing potions together gets the following results:
{| class="prettytable striped"
!Ingredients !! Result
|-
|red + yellow || orange
|-
|red + blue || purple
|-
|yellow + blue || green
|-
|''any two secondaries'' || brown
|-
|''any dark potion'' + white || ''corresponding light potion''
|-
|''any light potion'' + black || ''corresponding dark portion''
|-
|black + white || gray
|-
|''any other combination'' || random alchemy result
|}

Mixing two light potions will create the light version of the result, and the same goes with dark. Mixing a light and a dark potion will create either result at random unless one of the original potions is diluted, in which case the result will have the same light/dark level as the undiluted potion.

These potions are considered colorless:<br />
 bubbly        icy           smoky
 cloudy        luminescent   soapy
 dark          milky         sparkling
 effervescent  muddy         squishy
 gooey         murky         steamy
 greasy        silver        swirly
 fizzy         slimy         viscous

The patch also changes three potion names: purple-red, brilliant blue, and cyan are replaced with amber, indigo, and viscous.

Because there are 12 more possible potion colors than types of potions in the game, some colors will probably not exist, rendering some formulas unavailable for certain games.

If the desired color is not a color used in the game, both potions will be wasted. For example, if you mix an orange potion with an emerald potion, but brown potions are not used in your game, then you will both potions disappear, leaving you with nothing: "The mixture glows brightly and evaporates."

Finally, a potion of polymorph, regardless of its color, will simply polymorph anything it is mixed with.

=== Blood potions ===

Potions of [[potion of blood|blood]] and vampire blood, introduced in [[SLASH'EM]] and [[UnNetHack]], are also subject to alchemy:

{|class="prettytable striped"
!Ingredients
!Result
|-
|[[potion of fruit juice]] + [[potion of blood]]
|[[potion of blood]]
|-
|[[potion of fruit juice]] + [[potion of vampire blood]]
|[[potion of vampire blood]]
|}

In UnNetHack, these are the only potion-mixing recipes outside of the color alchemy system.

=== Gem alchemy ===

In [[SLASH'EM]] and [[dNetHack]], dipping a valuable [[gem]] into a [[potion of acid]] will generate another type of potion. The potion you get is defined by its randomized description, not by its identified description. For example, if you dip a ruby into acid, you will always get a ruby potion whether ruby potions are full healing or hallucination in your game.

There's a chance that dipping will cause an explosion, using up the potion and gem and dealing some damage. If the potion of acid is cursed, it always explodes, like with normal alchemy. You will need one potion of acid per potion produced; stacks of gems will be melted one gem at a time.

{|class="prettytable striped sortable"
!Dipped gem
!Resulting potion appearance
|-
|[[dilithium crystal]]
|''(always explodes)''
|-
|[[opal]]
|cloudy potion
|-
|[[ruby]]
|ruby potion
|-
|[[garnet]]
|pink potion
|-
|[[jasper]]
|purple-red potion
|-
|[[jacinth]]
|orange potion
|-
|[[agate]]
|swirly potion
|-
|[[citrine]]
|yellow potion
|-
|[[chrysoberyl]]
|golden potion
|-
|[[amber]]
|brown potion
|-
|[[topaz]]
|murky potion
|-
|[[emerald]]
|emerald potion
|-
|[[turquoise]]
|sky blue potion
|-
|[[aquamarine]]
|cyan potion
|-
|[[jade]]
|dark green potion
|-
|[[sapphire]]
|brilliant blue potion
|-
|[[amethyst]]
|magenta potion
|-
|[[fluorite]]
|white potion
|-
|[[black opal]]
|black potion
|-
|[[jet]]
|dark potion
|-
|[[obsidian ]]
|effervescent potion
|-
|[[worthless glass]]
|''(no effect)''
|}

There are no gems that produce milky, smoky, muddy, fizzy, luminescent, puce, bubbly, icy, blood-red, or clear potions.

As in vanilla NetHack, dipping an amethyst into a potion of booze turns it into a potion of fruit juice.

==References ==
<references/>
{{nethack-361|offset=1}}
{{featured}}
[[Category:Strategy]]
[[Category:Potions]]}
&&%s&& %s Source talk:NetHack 1.4f/invent.c {27258 2008-03-04T01:05:04Z {459 Kernigh bot} [[Talk:NetHack 1.4f/invent.c]] moved to [[Source talk:NetHack 1.4f/invent.c]]: Robot: moved page Notice that "1.3" at the top of the file.  The patch at [ftp://ftp.uu.net/usenet/comp.sources.games/volume2/nethack/ UUNet] clearly shows that invent.c does indeed have changes from 1.3d.  Unfortunately, the patch seems to have been generated using something other than the distributed 1.3d invent.c, and ed chokes when you try to apply it.  The overall patch generates a lot of output on stdout and Mr. Harlow seems to have overlooked the error messages.

A recipe for getting a correct 1.4f from the UUNet sources almost warrants its own article.  I seem not to have a good procedure myself -- I just diffed my attempt against the Harlow distribution and found manifest errors in both directions, and not just in invent.c. -- [[User:Ray Chason|Ray Chason]] 04:58, 2 September 2006 (UTC)

: Uploaded the 1.4f invent.c as derived from the UUNet sources. -- [[User:Ray Chason|Ray Chason]] 17:18, 2 September 2006 (UTC)}
&&%s&& %s Source talk:NetHack 1.4f/mon.c {27285 2008-03-04T01:13:46Z {459 Kernigh bot} [[Talk:NetHack 1.4f/mon.c]] moved to [[Source talk:NetHack 1.4f/mon.c]]: Robot: moved page Why not just fix ''obvious'' corruptions, such as the one on line 264, rather than comment them? --[[User:ZeroOne|ZeroOne]] 11:06, 2 September 2006 (UTC)
:Well, OK...though this and the non-patching of invent.c seem to be the only ones.  I otherwise get the same results when using the UUNet distribution. -- [[User:Ray Chason|Ray Chason]] 16:03, 2 September 2006 (UTC)}
&&%s&& %s Nethack haiku {9445 2006-09-02T16:45:20Z {761 Someone Else} [[Nethack haiku]] moved to [[NetHack haiku]]: Obvious reason. #REDIRECT [[NetHack haiku]]}
&&%s&& %s How to apply the NetHack 1.4f patch {128627 2019-10-13T12:25:41Z {679 Ray Chason} /* The necessary files */ Remove the dead UUNet link The patch to convert [[NetHack 1.3d]] to [[NetHack 1.4f]] is difficult to apply correctly.  Some parts of it seem to be interpreted incorrectly by a modern [[Unix]] shell, and the patch for [[NetHack 1.4f/invent.c|invent.c]] seems to be created from something different from its [[NetHack 1.3d/invent.c|counterpart]] in 1.3d.  This article will describe how to correct these problems and '''apply the NetHack 1.4f patch'''.

== Note to users of Microsoft Windows ==

The original archives are distributed in a format called a "shell archive" and are most easily unpacked in a Unix environment.  Users of Windows can install [http://www.mingw.org/ MinGW] or [http://www.cygwin.com/ Cygwin] to obtain the necessary tools.  [http://www.delorie.com/djgpp/ DJGPP] may also work.

== The necessary files ==

Start with a copy of NetHack 1.3d.  The [http://www.juiblex.co.uk/nethack/source/nethack-1.3d.tar.gz Harlow] and [http://ftp.sunet.se/pub/usenet/ftp.uu.net/usenet/comp.sources.games/volume2/nethack/ UUNet] distributions are the same, so either may be used.

The patch was originally available at UUNet, but that site has disappeared.  Fortunately, UUNet is [http://ftp.sunet.se/mirror/archive/ftp.sunet.se/pub/usenet/ftp.uu.net mirrored] at [http://ftp.sunet.se/mirror/archive/ftp.sunet.se ftp.sunet.se].  Download the patch [http://ftp.sunet.se/mirror/archive/ftp.sunet.se/pub/usenet/ftp.uu.net/comp.sources.games/volume2/nethack/patch1.gz here]


The file has the extension ".gz".  This means that it has been compressed with gzip.  It can be unzipped with "gunzip".

== Extracting the patch files ==

The file patch1 is a shell archive -- a Bourne shell script that, when run, creates the archived files in the current directory.  However, it also has [[Usenet]] headers and a brief explanation at the top.  You'll need to delete all lines before the one that reads "#! /bin/sh".

Run the resulting file as a Bourne shell script, say, as "sh patch1".  This will produce the following files:
* README.NEW
* Fixes.1.4
* Manifest.upd
* Makefile.tcc
* Maketcc.ini
* update.patches

== Editing the patch for a modern shell ==

The file update.patches is itself a Bourne shell script that invokes ed to modify the files that have changed in 1.4f.  Specifically, it contains a series of shell commands such as these:

 cp apply.c apply.c.orig
 ed apply.c &lt;&lt;ED_EOF
 187d
 183,185d
 1c
 /*	SCCS Id: @(#)apply.c	1.4	87/08/08
 .
 w
 q
 ED_EOF

It is not quite compatible with GNU bash as provided, because the text that is passed to ed (between the <<ED_EOF and ED_EOF markers) may contain characters that are meaningful to the shell.  We need to edit update.patches to tell bash not to interpret these characters.

Bash will not interpret these characters if the starting marker is quoted in any way. (We must ''not'' alter the ending marker.)  So it is sufficient to use the replace function of your favorite text editor, and replace all instances of <<ED_EOF with <<'ED_EOF'.  For example, in vi, use ":1,$s/<<ED_EOF/<<'ED_EOF'/".

{{todo|Does anyone have instructions for Emacs or other popular editors?}}

The above block then reads:

 cp apply.c apply.c.orig
 ed apply.c &lt;&lt;<span style="color:#00AA00">'ED_EOF'</span>
 187d
 183,185d
 1c
 /*	SCCS Id: @(#)apply.c	1.4	87/08/08
 .
 w
 q
 ED_EOF

and other such blocks are similarly affected.

== Editing invent.c to match the patch ==

Now it is necessary to edit invent.c so that it matches the provided patch.  The patch was generated from an altered invent.c that had six extra lines that are not present in the distributed version of 1.3d.  Go to [[NetHack 1.3d/invent.c#line778|line 778]]; it and the surrounding lines read:

 		doinv (stuff);
 
 	return(0);
 }
 
 <span style="color:#00AA00">/* look at what is here */</span>
 dolook() {

Line 778 is highlighted in green.

You need to insert ''exactly'' six lines above this line.  It does not matter what the lines contain, as the patch will blindly delete them, but there must be ''exactly'' six lines and they must be placed ''above'' that comment.  You might see something like:

 		doinv (stuff);
 
 	return(0);
 }
 
 <span style="color:#00AA00">1
 2
 3
 4
 5
 6</span>
 /* look at what is here */
 dolook() {

== Applying the patch ==

Once update.patches and invent.c are both edited in this way, you can now apply the patch with "sh update.patches".

When you are satisfied that the patch is applied correctly (you may do well to do "diff invent.c.orig invent.c" in particular), then you can go ahead and delete the files "*.orig", update.patches, and patch1.  You now have a [[NetHack 1.4f]] that matches the likely intentions of the developers.
[[Category:Annotations]]}
&&%s&& %s Template:Semsrc {84761 2013-05-05T08:14:34Z {4000045 Bulwersator} -unnecessary link <includeonly>{{ #if:{{{line|}}}
| [http://slashem.cvs.sourceforge.net/slashem/slashem/{{{1}}}<!--
-->?{{ #if:{{{2|}}}|revision={{{2}}}& }}view=markup#l{{{line}}}<!--
--> {{{1}}}#line{{{line}}}]
| [http://slashem.cvs.sourceforge.net/slashem/slashem/{{{1}}}<!--
-->?{{ #if:{{{2|}}}|revision={{{2}}}& }}view=markup {{{1}}}]
}}</includeonly><noinclude>
Use this template to link to directly to the CVS repository containing the [[SLASH'EM]] source code. Syntax is <tt><nowiki>{{semsrc|src/eat.c|1.40.2.1|line=2095}}</nowiki></tt> or just <tt><nowiki>{{semsrc|src/eat.c}}</nowiki></tt> for HEAD. See [[Template talk:Semsrc]] for more.

''Alternative:'' Those linking to [[SLASH'EM 0.0.7E7F2]] sources should link to NetHackWiki's copy of the sources using {{tl|sourcecode}} or {{tl|refsrc}} if possible.
[[Category:Templates|{{PAGENAME}}]]
</noinclude>}
&&%s&& %s Holy wafer {148422 2022-10-04T23:59:26Z {4001279 Umbire the Phantom} cat {{comestible
  |color=yellow
  |name=holy wafer
  |cost=12
  |nutrition=150
  |turns=1
  |weight=1
  |conduct=vegan
}}

'''Holy wafers''' are a new food in SLASH'EM, useful for all characters, but especially lawful heros.
Any player can eat a holy wafer to cure their [[sickness]] and [[lycanthropy]].
Lawful players will also heal by 20 to 39 HP; Chaotic players will lose 10 to 19 HP, but will not go below 1 HP.
Holy wafers can be considered a better version of [[Sprig of wolfsbane | wolfsbane]], since:
* They weigh the same.
* They can be eaten in the same time.
* They are both vegan.
* Holy wafers also cure sickness.
* Holy wafers provide nearly quadruple the nutrition.
* Holy wafers heal Lawful players.
* Only Chaotic players lose health.

Source code reference: {{semsrc|src/eat.c|1.40.2.1|line=2095}}, SLASH'EM 0.0.7E7F2

[[Category:SLASH'EM items]]
[[Category:SlashTHEM items]]}
&&%s&& %s Yeti {146401 2022-06-29T13:47:54Z {4001279 Umbire the Phantom} /* SLASH'EM */ {{For|the macro used to define all apelike creatures|S_YETI}}
{{monster
 |difficulty=7
 |level=5
 |experience=59
 |speed=15
 |AC=6
 |MR=0
 |align=0
 |frequency=2
 |genocidable=Yes
 |attacks=Claw 1d6, Claw 1d6, Bite 1d4 
 |weight=1600
 |nutr=700
 |size=Large
 |resistances=Cold
 |resistances conveyed=Cold (33%)
 |attributes={{attributes|A yeti|animal=1|humanoid=1|carnivore=1|hostile=1|strong=1|infravisible=1}}
 |reference=[[monst.c#line1935]]
}}

A '''yeti''' is a type of [[monster]] that appears in ''[[NetHack]]''. It is a carnivorous [[apelike creature]].

Eating a yeti corpse has a 33% chance of providing [[cold resistance]].

==Generation==
Yeti are a somewhat uncommon sight once you have gained a few [[experience level]]s and either traveled past the [[Oracle]]'s level or reached [[Minetown]]. They are also among the apelike creatures that can very occasionally appear on the [[Healer quest]].

==Strategy==
The yeti is dangerous and must be dealt with carefully - while it cannot grab the player like a [[carnivorous ape]], the yeti moves quicker than the largest ape or an [[speed|unhasted]] player, and has a bite attack in addition to two clawing attacks.

With a small bit of preparation, you can blunt its damage with high [[AC]], or else safely deal with it from a distance: engravng [[Elbereth]] can scare it off, allowing you to follow up with any ranged attacks at your disposal. [[Multishot]] projectiles, offensive spells and wands are ideal, especially if you can exploit the yeti's vulnerability to fire. The yeti's own 6 AC is low enough that even a mediocre spellcaster can kill a yeti with a few uses of the {{spell of|force bolt}} spell; non-casters can do the same with a [[wand of striking]].

==History==
The yeti appears in the bestiary of PDP-11 Hack, a variant of [[Jay Fenlason's Hack]], and is the first apelike creature introduced to the game. The macro used to define apelike creatures - <code>[[S_YETI]]</code> - is named after the yeti;{{refsrc|include/monsym.h|65|version=NetHack 3.6.6}}{{refsrc|include/monsym.h|134|version=NetHack 3.6.6}} the monster class uses the {{white|Y}} glyph as the yeti did in the first versions of ''Hack''.

==Origin==
{{wikipedia|Yeti}}
The Yeti, or Abominable Snowman, is an iconic cryptozoological animal said to inhabit the Himalayan region of Nepal and Tibet. Folklorists trace the origin of the Yeti to a combination of factors, including the folklore of pre-Buddhist Himalayan cultures such as the [[wikipedia:Sherpa people|Sherpa people]], and misidentified fauna such as bears or yak.

The Yeti is often described as being a large, bipedal ape-like creature that is covered with brown, gray, or white hair, and it is sometimes depicted as having large, sharp teeth.

==Variants==
Variants of ''NetHack'' typically make it impossible for yetis to generate in [[Gehennom]], as they are weak to fire.

===SLASH'EM===
In [[SLASH'EM]], yetis can be tamed by throwing them bananas, and can [[Monsters with hits creatures as a +x weapon (SLASH'EM)|hit as a +1 weapon]].

===Lethe patch===
In the [[Lethe patch]], seven yetis are generated in the lair of [[Geryon]] within [[Gehennom (Lethe patch)|Gehennom]].

===dNetHack===
In [[dNetHack]], yeti weight is increased by 1000 [[aum]] (more than 50%), and their base experience is increased; they can also no longer be tamed.

===EvilHack===
In [[EvilHack]], yeti have their base experience decreased to 29 and cannot appear in Gehennom, but are otherwise identical to vanilla yeti.

==Monster stats by variant==
<simpletabs>
SLASH'EM|{{monster
 |difficulty=7
 |level=5
 |experience=59
 |speed=15
 |AC=6
 |MR=0
 |align=0
 |frequency=2
 |genocidable=Yes
 |attacks=Claw 1d6, Claw 1d6, Bite 1d4 
 |weight=1600
 |nutr=700
 |size=Large
 |resistances=Cold
 |resistances conveyed=Cold (33%)
 |attributes={{attributes|A yeti|animal=1|humanoid=1|carnivore=1|hostile=1|strong=1|infravisible=1|nohell=1}}
 |reference=[[SLASH'EM 0.0.7E7F2/monst.c#line3326]]
}}
|-|
dNetHack|{{monster
 |name=yeti
 |symbol={{white|Y}}
 |tile=
 |difficulty=7
 |level=5
 |experience=79
 |speed=15
 |AC=6
 |MR=0
 |align=0
 |frequency=2
 |genocidable=Yes
 |attacks=Claw 1d6 physical, Claw 1d6 physical, Bite 1d4 physical
 |weight=2600
 |nutr=700
 |size=large
 |resistances=[[cold]]
 |resistances conveyed=[[cold]]
 |attributes={{attributes|A yeti|humanoid=1|animal=1|carnivore=1|hostile=1|strong=1|infravisible=1|notame=1}}
 |reference=[https://github.com/Chris-plus-alphanumericgibberish/dNAO/blob/compat-3.21.1/src/monst.c#L4860 dNetHack src/monst.c, line 4860]
}}
|-|
EvilHack|{{monster
 |name=yeti
 |difficulty=7
 |level=5
 |experience=29
 |speed=15
 |AC=6
 |MR=0
 |align=0
 |frequency=2
 |genocidable=Yes
 |attacks=Claw 1d6, Claw 1d6, Bite 1d4
 |resistances conveyed=cold (33%)
 |resistances=cold
 |attributes={{attributes|A yeti|animal=1|humanoid=1|carnivore=1|hostile=1|strong=1|infravisible=1|m4_vulnerable_fire=1|nohell=1}}
 |size=Large
 |nutr=700
 |weight=1600
 |reference=[https://github.com/k21971/EvilHack/blob/master/src/monst.c#L2618 EvilHack - monst.c, line 2618]
}}
</simpletabs>

== Encyclopedia entry ==
{{encyclopedia|
The Abominable Snowman, or yeti, is one of the truly great
unknown animals of the twentieth century.  It is a large hairy
biped that lives in the Himalayan region of Asia ... The story
of the Abominable Snowman is filled with mysteries great and
small, and one of the most difficult of all is how it got that
awful name.  The creature is neither particularly abominable,
nor does it necessarily live in the snows.  _Yeti_ is a Tibetan
word which may apply either to a real, but unknown animal of
the Himalayas, or to a mountain spirit or demon -- no one is
quite sure which.  And after nearly half a century in which
Westerners have trampled around looking for the yeti, and
asking all sorts of questions, the original native traditions
concerning the creature have become even more muddled and
confused.
|[ The Encyclopedia of Monsters, by Daniel Cohen ]
}}

==References==
<references/>
{{nethack-366}}
[[Category:Monsters]]}
&&%s&& %s NetHack 3.2.0 {148618 2022-10-05T07:43:37Z {4001279 Umbire the Phantom} /* Izchak Miller, 1935-1994 */* {{NetHack Versions}}

'''NetHack 3.2.0''' is the 20th public release of [[NetHack]] and the 16th by the [[DevTeam]].  [[Mike Stephenson]] announced it to the [[Usenet]] newsgroups rec.games.roguelike.announce and [[rec.games.roguelike.nethack]] in April 1996.<ref>Mike Stephenson, [http://groups.google.com/group/rec.games.roguelike.nethack/browse_thread/thread/d6076b31600388b3/25d984d1294d5b74 NetHack 3.2.0 Release].  rec.games.roguelike.nethack and rec.games.roguelike.announce, April 18, 1996.</ref>

== Availability ==
